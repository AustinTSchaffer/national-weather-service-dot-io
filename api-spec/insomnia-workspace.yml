_type: export
__export_format: 4
__export_date: 2022-06-25T14:57:55.990Z
__export_source: insomnia.desktop.app:v2022.4.2
resources:
  - _id: req_94e93083ccf7423e86b6892ee0b4b679
    parentId: wrk_13d288ba15ef41e19b1769afb91c42b8
    modified: 1656169010932
    created: 1656168991122
    url: "{{ _.base_url }}/openapi.json"
    name: /openapi.json
    description: ""
    method: GET
    body: {}
    parameters: []
    headers: []
    authentication: {}
    metaSortKey: -1656168991122
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: wrk_13d288ba15ef41e19b1769afb91c42b8
    parentId: null
    modified: 1655957554343
    created: 1655954294457
    name: weather.gov API 1.8.3
    description: weather.gov API
    scope: collection
    _type: workspace
  - _id: req_wrk_13d288ba15ef41e19b1769afb91c42b871a7ca85
    parentId: wrk_13d288ba15ef41e19b1769afb91c42b8
    modified: 1656169062628
    created: 1655957554142
    url: "{{ base_url }}/points/{{ point }}"
    name: Start Here /points/{point}
    description: ""
    method: GET
    body: {}
    parameters: []
    headers:
      - name: User-Agent
        disabled: false
        value: "{{ userAgent }}"
        id: pair_1070bdfe130c4d5db3856c290fd718c8
    authentication: {}
    metaSortKey: -1655957554378
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_13d288ba15ef41e19b1769afb91c42b826185744
    parentId: wrk_13d288ba15ef41e19b1769afb91c42b8
    modified: 1655957595278
    created: 1655957554328
    url: "{{ base_url }}/alerts"
    name: /alerts
    description: ""
    method: GET
    body: {}
    parameters:
      - name: active
        disabled: true
        value: "true"
        id: pair_aad101e2282f473dae278fdde7d792e9
      - name: start
        disabled: true
        value: 2022-06-23T04:12:34.087Z
        id: pair_34e71ac8f5384e22978266db5445c285
      - name: end
        disabled: true
        value: 2022-06-23T04:12:34.087Z
        id: pair_ae360d9ed96040deb9ab3a5c4c2f8d99
      - name: status
        disabled: true
        value: string
        id: pair_7ab3985023fb4ac393a0f9d6fe06d07a
      - name: message_type
        disabled: true
        value: string
        id: pair_73d83e335dbc42b7a6b8ee3aec6bde26
      - name: event
        disabled: true
        value: string
        id: pair_5283617a49d94e80a85a7c6064c69618
      - name: code
        disabled: true
        value: string
        id: pair_d0b837312b7041b4bdb082d8897ba3eb
      - name: area
        disabled: true
        value: ""
        id: pair_22b0fda4bc774f258eacb512cb9f68bd
      - name: point
        disabled: true
        value: string
        id: pair_e82f983d17544687aa1c3174e1c1ffb7
      - name: region
        disabled: true
        value: string
        id: pair_138a642cd77c4e38a206a4d8c229e425
      - name: region_type
        disabled: true
        value: string
        id: pair_d20fdbff04cb403f9360532ad3c9d712
      - name: zone
        disabled: true
        value: string
        id: pair_1cdbb686a3194fdaaac35acb962c9920
      - name: urgency
        disabled: true
        value: string
        id: pair_0464f16557e54ee6820e2ba42b342095
      - name: severity
        disabled: true
        value: string
        id: pair_23ee4c834a5f4bd6aae02bca1193f525
      - name: certainty
        disabled: true
        value: string
        id: pair_32afec11a3af4061a0c9d348b9795fad
      - name: limit
        disabled: true
        value: "0"
        id: pair_dab53c1925e24deb9f9babd95050e696
      - name: cursor
        disabled: true
        value: string
        id: pair_531baee86ebc4775b87308a1dd029e67
    headers:
      - name: User-Agent
        disabled: false
        value: "{{ userAgent }}"
        id: pair_96fe5741975c44b29d83359a0323c1b8
    authentication: {}
    metaSortKey: -1655957554328
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_13d288ba15ef41e19b1769afb91c42b8f3b57480
    parentId: wrk_13d288ba15ef41e19b1769afb91c42b8
    modified: 1655957600508
    created: 1655957554326
    url: "{{ base_url }}/alerts/active"
    name: /alerts/active
    description: ""
    method: GET
    body: {}
    parameters:
      - name: status
        disabled: true
        value: string
        id: pair_98855e258b434d9881ab7a472e70a114
      - name: message_type
        disabled: true
        value: string
        id: pair_b38bb79d11d749cc96c00e775a21e486
      - name: event
        disabled: true
        value: string
        id: pair_99ac7338a0674d63ae0d723fc2abe12a
      - name: code
        disabled: true
        value: string
        id: pair_1d32136859a24d77afa3d6bbc3219b9a
      - name: area
        disabled: true
        value: ""
        id: pair_62c1d6e47d16442fb245c6f01e991426
      - name: point
        disabled: true
        value: string
        id: pair_f2fb1e58789242a581aa395f66b97b79
      - name: region
        disabled: true
        value: string
        id: pair_ec8cc065a40a475e8f896effeee40c50
      - name: region_type
        disabled: true
        value: string
        id: pair_297e6aa3588a48d7b595fbbfe6da1115
      - name: zone
        disabled: true
        value: string
        id: pair_e62e8f3f04134fecbbdb53f00161c516
      - name: urgency
        disabled: true
        value: string
        id: pair_0a2d7fa8ef434d039f724f66a7e3adbb
      - name: severity
        disabled: true
        value: string
        id: pair_00e90b8326c344ddb848f71d78452bd9
      - name: certainty
        disabled: true
        value: string
        id: pair_34bc00f3f4db4b6dbb8687612f94c849
      - name: limit
        disabled: true
        value: "0"
        id: pair_f976e10ed21040a281e1deedfd838049
    headers:
      - name: User-Agent
        disabled: false
        value: "{{ userAgent }}"
        id: pair_a6b24c5804f447d3b5c1d46d4ec996ca
    authentication: {}
    metaSortKey: -1655957554326
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_13d288ba15ef41e19b1769afb91c42b8bcf1a02e
    parentId: wrk_13d288ba15ef41e19b1769afb91c42b8
    modified: 1655957601095
    created: 1655957554302
    url: "{{ base_url }}/alerts/active/count"
    name: /alerts/active/count
    description: ""
    method: GET
    body: {}
    parameters: []
    headers:
      - name: User-Agent
        disabled: false
        value: "{{ userAgent }}"
        id: pair_69d461e1c67a4c529d681d6dcb71dd4b
    authentication: {}
    metaSortKey: -1655957554302
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_13d288ba15ef41e19b1769afb91c42b86d13d2bf
    parentId: wrk_13d288ba15ef41e19b1769afb91c42b8
    modified: 1655957970052
    created: 1655957554190
    url: "{{ base_url }}/alerts/active/zone/{{ zoneId }}"
    name: /alerts/active/zone/{zoneId}
    description: ""
    method: GET
    body: {}
    parameters: []
    headers:
      - name: User-Agent
        disabled: false
        value: "{{ userAgent }}"
        id: pair_0838ad561e374ec1a7e8de01436e0776
    authentication: {}
    metaSortKey: -1655957554190
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_13d288ba15ef41e19b1769afb91c42b8f1b21619
    parentId: wrk_13d288ba15ef41e19b1769afb91c42b8
    modified: 1655957969517
    created: 1655957554188
    url: "{{ base_url }}/alerts/active/area/{{ area }}"
    name: /alerts/active/area/{area}
    description: ""
    method: GET
    body: {}
    parameters: []
    headers:
      - name: User-Agent
        disabled: false
        value: "{{ userAgent }}"
        id: pair_006d8fa3adc0419b9061a20aab990cca
    authentication: {}
    metaSortKey: -1655957554188
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_13d288ba15ef41e19b1769afb91c42b85b281bee
    parentId: wrk_13d288ba15ef41e19b1769afb91c42b8
    modified: 1655957968340
    created: 1655957554186
    url: "{{ base_url }}/alerts/active/region/{{ region }}"
    name: /alerts/active/region/{region}
    description: ""
    method: GET
    body: {}
    parameters: []
    headers:
      - name: User-Agent
        disabled: false
        value: "{{ userAgent }}"
        id: pair_37890b8f23304349bce4f0811c4737c6
    authentication: {}
    metaSortKey: -1655957554186
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_13d288ba15ef41e19b1769afb91c42b807d5cff9
    parentId: wrk_13d288ba15ef41e19b1769afb91c42b8
    modified: 1655957605543
    created: 1655957554184
    url: "{{ base_url }}/alerts/types"
    name: /alerts/types
    description: ""
    method: GET
    body: {}
    parameters: []
    headers:
      - name: User-Agent
        disabled: false
        value: "{{ userAgent }}"
        id: pair_005462a8020844ddaac43ff9c29b8eb7
    authentication: {}
    metaSortKey: -1655957554184
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_13d288ba15ef41e19b1769afb91c42b8e0b6c05d
    parentId: wrk_13d288ba15ef41e19b1769afb91c42b8
    modified: 1655957962476
    created: 1655957554182
    url: "{{ base_url }}/alerts/{{ id }}"
    name: /alerts/{id}
    description: ""
    method: GET
    body: {}
    parameters: []
    headers:
      - name: User-Agent
        disabled: false
        value: "{{ userAgent }}"
        id: pair_087e6cb9c3dd407ca4b1bdf350ef4d74
    authentication: {}
    metaSortKey: -1655957554182
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_13d288ba15ef41e19b1769afb91c42b8407257a6
    parentId: wrk_13d288ba15ef41e19b1769afb91c42b8
    modified: 1655957554181
    created: 1655957554181
    url: "{{ base_url }}/glossary"
    name: /glossary
    description: ""
    method: GET
    body: {}
    parameters: []
    headers:
      - name: User-Agent
        disabled: false
        value: "{{ userAgent }}"
    authentication: {}
    metaSortKey: -1655957554181
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_13d288ba15ef41e19b1769afb91c42b83ee0025a
    parentId: wrk_13d288ba15ef41e19b1769afb91c42b8
    modified: 1656168823399
    created: 1655957554180
    url: "{{ base_url }}/gridpoints/{{ wfo }}/{{ x }},{{ y }}"
    name: /gridpoints/{wfo}/{x},{y}
    description: ""
    method: GET
    body: {}
    parameters: []
    headers:
      - name: User-Agent
        disabled: false
        value: "{{ userAgent }}"
        id: pair_80cdfb113ddf442c89857b7cecedbc54
    authentication: {}
    metaSortKey: -1655957554180
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_13d288ba15ef41e19b1769afb91c42b8cdffcc2a
    parentId: wrk_13d288ba15ef41e19b1769afb91c42b8
    modified: 1656168876449
    created: 1655957554178
    url: "{{ base_url }}/gridpoints/{{ wfo }}/{{ x }},{{ y }}/forecast"
    name: /gridpoints/{wfo}/{x},{y}/forecast
    description: ""
    method: GET
    body: {}
    parameters:
      - name: units
        disabled: true
        value: us
        id: pair_4a7234f1b3c442c09f5f0a4cd8f5b3f2
    headers:
      - name: Feature-Flags
        disabled: true
        value: string
        id: pair_e65d1a269ecb409da58a9458e84a4a47
      - name: User-Agent
        disabled: false
        value: "{{ userAgent }}"
        id: pair_a20b187e4a7d4f72a7f02865b2f9f501
    authentication: {}
    metaSortKey: -1655957554178
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_13d288ba15ef41e19b1769afb91c42b8b8f259be
    parentId: wrk_13d288ba15ef41e19b1769afb91c42b8
    modified: 1656168942445
    created: 1655957554177
    url: "{{ base_url }}/gridpoints/{{ wfo }}/{{ x }},{{ y }}/forecast/hourly"
    name: /gridpoints/{wfo}/{x},{y}/forecast/hourly
    description: ""
    method: GET
    body: {}
    parameters:
      - name: units
        disabled: true
        value: us
        id: pair_e98ff19aefde4104b1e1440f78d50b11
    headers:
      - name: Feature-Flags
        disabled: true
        value: string
        id: pair_4595fb3711e240faac24e6aab844599d
      - name: User-Agent
        disabled: false
        value: "{{ userAgent }}"
        id: pair_2fcd0b55feee41d19b14c6487e9ed064
      - id: pair_63ebb7812bf24ba69772a4be9a62d0a2
        name: Accept
        value: "{{ _.accept['JSON-LD'] }}"
        description: ""
    authentication: {}
    metaSortKey: -1655957554177
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_13d288ba15ef41e19b1769afb91c42b8a2498683
    parentId: wrk_13d288ba15ef41e19b1769afb91c42b8
    modified: 1656167493342
    created: 1655957554176
    url: "{{ base_url }}/gridpoints/{{ wfo }}/{{ x }},{{ y }}/stations"
    name: /gridpoints/{wfo}/{x},{y}/stations
    description: ""
    method: GET
    body: {}
    parameters: []
    headers:
      - name: User-Agent
        disabled: false
        value: "{{ userAgent }}"
        id: pair_a6f76d0098024ef89b20b296d4c5fd84
    authentication: {}
    metaSortKey: -1655957554176
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_13d288ba15ef41e19b1769afb91c42b8ae7368ca
    parentId: wrk_13d288ba15ef41e19b1769afb91c42b8
    modified: 1655958035984
    created: 1655957554175
    url: "{{ base_url }}/icons/{{ set }}/{{ timeOfDay }}/{{ first }}"
    name: /icons/{set}/{timeOfDay}/{first}
    description: ""
    method: GET
    body: {}
    parameters: []
    headers:
      - name: User-Agent
        disabled: false
        value: "{{ userAgent }}"
        id: pair_acd0dd50466c441687fa775d65f24436
    authentication: {}
    metaSortKey: -1655957554175
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_13d288ba15ef41e19b1769afb91c42b8d3d862e7
    parentId: wrk_13d288ba15ef41e19b1769afb91c42b8
    modified: 1655957554172
    created: 1655957554172
    url: "{{ base_url }}/icons/{{ set }}/{{ timeOfDay }}/{{ first }}/{{ second }}"
    name: /icons/{set}/{timeOfDay}/{first}/{second}
    description: ""
    method: GET
    body: {}
    parameters: []
    headers:
      - name: User-Agent
        disabled: false
        value: "{{ userAgent }}"
    authentication: {}
    metaSortKey: -1655957554172
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_13d288ba15ef41e19b1769afb91c42b8ee7439e3
    parentId: wrk_13d288ba15ef41e19b1769afb91c42b8
    modified: 1655957554167
    created: 1655957554167
    url: "{{ base_url }}/icons"
    name: /icons
    description: ""
    method: GET
    body: {}
    parameters: []
    headers:
      - name: User-Agent
        disabled: false
        value: "{{ userAgent }}"
    authentication: {}
    metaSortKey: -1655957554167
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_13d288ba15ef41e19b1769afb91c42b87e105c4e
    parentId: wrk_13d288ba15ef41e19b1769afb91c42b8
    modified: 1656167479602
    created: 1655957554166
    url: "{{ base_url }}/thumbnails/satellite/{{ area }}"
    name: /thumbnails/satellite/{area}
    description: ""
    method: GET
    body: {}
    parameters: []
    headers:
      - name: User-Agent
        disabled: false
        value: "{{ userAgent }}"
        id: pair_70e8e0d82eb34d019d8f03c481d0f7ec
    authentication: {}
    metaSortKey: -1655957554166
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_13d288ba15ef41e19b1769afb91c42b8fe24d1c5
    parentId: wrk_13d288ba15ef41e19b1769afb91c42b8
    modified: 1656167478552
    created: 1655957554163
    url: "{{ base_url }}/stations/{{ stationId }}/observations"
    name: /stations/{stationId}/observations
    description: ""
    method: GET
    body: {}
    parameters:
      - name: start
        disabled: true
        value: 2022-06-23T04:12:34.088Z
        id: pair_3aed7db9ab574f91ac16d86ba95a586d
      - name: end
        disabled: true
        value: 2022-06-23T04:12:34.088Z
        id: pair_b5bdb71c20364eaf95d849e301345213
      - name: limit
        disabled: true
        value: "0"
        id: pair_626c4644a1e64a3bb3395426b2dcaa33
    headers:
      - name: User-Agent
        disabled: false
        value: "{{ userAgent }}"
        id: pair_447253c72a584b54888eff78eca3f6ad
    authentication: {}
    metaSortKey: -1655957554163
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_13d288ba15ef41e19b1769afb91c42b81cd8c845
    parentId: wrk_13d288ba15ef41e19b1769afb91c42b8
    modified: 1656167477584
    created: 1655957554161
    url: "{{ base_url }}/stations/{{ stationId }}/observations/latest"
    name: /stations/{stationId}/observations/latest
    description: ""
    method: GET
    body: {}
    parameters:
      - name: require_qc
        disabled: true
        value: "true"
        id: pair_56c543c44930412f8aebe75d1d1fed40
    headers:
      - name: User-Agent
        disabled: false
        value: "{{ userAgent }}"
        id: pair_10cf9c5a3ed24f8e98654753fb4c8fac
    authentication: {}
    metaSortKey: -1655957554161
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_13d288ba15ef41e19b1769afb91c42b8ec468ccc
    parentId: wrk_13d288ba15ef41e19b1769afb91c42b8
    modified: 1656167475982
    created: 1655957554160
    url: "{{ base_url }}/stations/{{ stationId }}/observations/{{ time }}"
    name: /stations/{stationId}/observations/{time}
    description: ""
    method: GET
    body: {}
    parameters: []
    headers:
      - name: User-Agent
        disabled: false
        value: "{{ userAgent }}"
        id: pair_d9cbd928f7354f78a1f2c4b0b08a9e0e
    authentication: {}
    metaSortKey: -1655957554160
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_13d288ba15ef41e19b1769afb91c42b8dcb20400
    parentId: wrk_13d288ba15ef41e19b1769afb91c42b8
    modified: 1656167472899
    created: 1655957554158
    url: "{{ base_url }}/stations"
    name: /stations
    description: ""
    method: GET
    body: {}
    parameters:
      - name: id
        disabled: true
        value: string
        id: pair_fd42f2fe693841b5bc1901c3f4c1273f
      - name: state
        disabled: true
        value: ""
        id: pair_b6aa6a53984f4cb4abef3dc7550aaafd
      - name: limit
        disabled: true
        value: "0"
        id: pair_6b90a0744a2a427b92c5c249f17bf0b3
    headers:
      - name: User-Agent
        disabled: false
        value: "{{ userAgent }}"
        id: pair_3d0a73f13c614aefb03212b5fe26bcb6
    authentication: {}
    metaSortKey: -1655957554158
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_13d288ba15ef41e19b1769afb91c42b8c239700c
    parentId: wrk_13d288ba15ef41e19b1769afb91c42b8
    modified: 1656167471196
    created: 1655957554156
    url: "{{ base_url }}/stations/{{ stationId }}"
    name: /stations/{stationId}
    description: ""
    method: GET
    body: {}
    parameters: []
    headers:
      - name: User-Agent
        disabled: false
        value: "{{ userAgent }}"
        id: pair_bb4949597beb4bbf9287daed5082aa2c
    authentication: {}
    metaSortKey: -1655957554156
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_13d288ba15ef41e19b1769afb91c42b8e6427457
    parentId: wrk_13d288ba15ef41e19b1769afb91c42b8
    modified: 1655957554153
    created: 1655957554153
    url: "{{ base_url }}/offices/{{ officeId }}"
    name: /offices/{officeId}
    description: ""
    method: GET
    body: {}
    parameters: []
    headers:
      - name: User-Agent
        disabled: false
        value: "{{ userAgent }}"
    authentication: {}
    metaSortKey: -1655957554153
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_13d288ba15ef41e19b1769afb91c42b8a0a87f4c
    parentId: wrk_13d288ba15ef41e19b1769afb91c42b8
    modified: 1655957554150
    created: 1655957554150
    url: "{{ base_url }}/offices/{{ officeId }}/headlines/{{ headlineId }}"
    name: /offices/{officeId}/headlines/{headlineId}
    description: ""
    method: GET
    body: {}
    parameters: []
    headers:
      - name: User-Agent
        disabled: false
        value: "{{ userAgent }}"
    authentication: {}
    metaSortKey: -1655957554150
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_13d288ba15ef41e19b1769afb91c42b814179998
    parentId: wrk_13d288ba15ef41e19b1769afb91c42b8
    modified: 1655957554148
    created: 1655957554148
    url: "{{ base_url }}/offices/{{ officeId }}/headlines"
    name: /offices/{officeId}/headlines
    description: ""
    method: GET
    body: {}
    parameters: []
    headers:
      - name: User-Agent
        disabled: false
        value: "{{ userAgent }}"
    authentication: {}
    metaSortKey: -1655957554148
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_13d288ba15ef41e19b1769afb91c42b8e8eff9be
    parentId: wrk_13d288ba15ef41e19b1769afb91c42b8
    modified: 1655957554139
    created: 1655957554139
    url: "{{ base_url }}/points/{{ point }}/stations"
    name: /points/{point}/stations
    description: ""
    method: GET
    body: {}
    parameters: []
    headers:
      - name: User-Agent
        disabled: false
        value: "{{ userAgent }}"
    authentication: {}
    metaSortKey: -1655957554139
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_13d288ba15ef41e19b1769afb91c42b807bb9a65
    parentId: wrk_13d288ba15ef41e19b1769afb91c42b8
    modified: 1655957554137
    created: 1655957554137
    url: "{{ base_url }}/radar/servers"
    name: /radar/servers
    description: ""
    method: GET
    body: {}
    parameters:
      - name: reportingHost
        disabled: true
        value: string
    headers:
      - name: User-Agent
        disabled: false
        value: "{{ userAgent }}"
    authentication: {}
    metaSortKey: -1655957554137
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_13d288ba15ef41e19b1769afb91c42b862497a17
    parentId: wrk_13d288ba15ef41e19b1769afb91c42b8
    modified: 1655957554136
    created: 1655957554136
    url: "{{ base_url }}/radar/servers/{{ id }}"
    name: /radar/servers/{id}
    description: ""
    method: GET
    body: {}
    parameters:
      - name: reportingHost
        disabled: true
        value: string
    headers:
      - name: User-Agent
        disabled: false
        value: "{{ userAgent }}"
    authentication: {}
    metaSortKey: -1655957554136
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_13d288ba15ef41e19b1769afb91c42b8e8c69018
    parentId: wrk_13d288ba15ef41e19b1769afb91c42b8
    modified: 1655957554134
    created: 1655957554134
    url: "{{ base_url }}/radar/stations"
    name: /radar/stations
    description: ""
    method: GET
    body: {}
    parameters:
      - name: stationType
        disabled: true
        value: string
      - name: reportingHost
        disabled: true
        value: string
      - name: host
        disabled: true
        value: string
    headers:
      - name: User-Agent
        disabled: false
        value: "{{ userAgent }}"
    authentication: {}
    metaSortKey: -1655957554134
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_13d288ba15ef41e19b1769afb91c42b860b9d80c
    parentId: wrk_13d288ba15ef41e19b1769afb91c42b8
    modified: 1655957554132
    created: 1655957554132
    url: "{{ base_url }}/radar/stations/{{ stationId }}"
    name: /radar/stations/{stationId}
    description: ""
    method: GET
    body: {}
    parameters:
      - name: reportingHost
        disabled: true
        value: string
      - name: host
        disabled: true
        value: string
    headers:
      - name: User-Agent
        disabled: false
        value: "{{ userAgent }}"
    authentication: {}
    metaSortKey: -1655957554132
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_13d288ba15ef41e19b1769afb91c42b8b1782b05
    parentId: wrk_13d288ba15ef41e19b1769afb91c42b8
    modified: 1655957554130
    created: 1655957554130
    url: "{{ base_url }}/radar/stations/{{ stationId }}/alarms"
    name: /radar/stations/{stationId}/alarms
    description: ""
    method: GET
    body: {}
    parameters: []
    headers:
      - name: User-Agent
        disabled: false
        value: "{{ userAgent }}"
    authentication: {}
    metaSortKey: -1655957554130
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_13d288ba15ef41e19b1769afb91c42b87a5ff0c1
    parentId: wrk_13d288ba15ef41e19b1769afb91c42b8
    modified: 1655957554129
    created: 1655957554129
    url: "{{ base_url }}/radar/queues/{{ host }}"
    name: /radar/queues/{host}
    description: ""
    method: GET
    body: {}
    parameters:
      - name: limit
        disabled: true
        value: "0"
      - name: arrived
        disabled: true
        value: "null"
      - name: created
        disabled: true
        value: "null"
      - name: published
        disabled: true
        value: "null"
      - name: station
        disabled: true
        value: string
      - name: type
        disabled: true
        value: string
      - name: feed
        disabled: true
        value: string
      - name: resolution
        disabled: true
        value: "0"
    headers:
      - name: User-Agent
        disabled: false
        value: "{{ userAgent }}"
    authentication: {}
    metaSortKey: -1655957554129
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_13d288ba15ef41e19b1769afb91c42b82d2a6959
    parentId: wrk_13d288ba15ef41e19b1769afb91c42b8
    modified: 1655957554127
    created: 1655957554127
    url: "{{ base_url }}/radar/profilers/{{ stationId }}"
    name: /radar/profilers/{stationId}
    description: ""
    method: GET
    body: {}
    parameters:
      - name: time
        disabled: true
        value: "null"
      - name: interval
        disabled: true
        value: P2DT12H
    headers:
      - name: User-Agent
        disabled: false
        value: "{{ userAgent }}"
    authentication: {}
    metaSortKey: -1655957554127
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_13d288ba15ef41e19b1769afb91c42b82c226d3e
    parentId: wrk_13d288ba15ef41e19b1769afb91c42b8
    modified: 1655957554126
    created: 1655957554126
    url: "{{ base_url }}/products"
    name: /products
    description: ""
    method: GET
    body: {}
    parameters:
      - name: location
        disabled: true
        value: string
      - name: start
        disabled: true
        value: 2022-06-23T04:12:34.089Z
      - name: end
        disabled: true
        value: 2022-06-23T04:12:34.089Z
      - name: office
        disabled: true
        value: string
      - name: wmoid
        disabled: true
        value: string
      - name: type
        disabled: true
        value: string
      - name: limit
        disabled: true
        value: "0"
    headers:
      - name: User-Agent
        disabled: false
        value: "{{ userAgent }}"
    authentication: {}
    metaSortKey: -1655957554126
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_13d288ba15ef41e19b1769afb91c42b869acb19f
    parentId: wrk_13d288ba15ef41e19b1769afb91c42b8
    modified: 1655957554125
    created: 1655957554125
    url: "{{ base_url }}/products/locations"
    name: /products/locations
    description: ""
    method: GET
    body: {}
    parameters: []
    headers:
      - name: User-Agent
        disabled: false
        value: "{{ userAgent }}"
    authentication: {}
    metaSortKey: -1655957554125
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_13d288ba15ef41e19b1769afb91c42b8067d72e9
    parentId: wrk_13d288ba15ef41e19b1769afb91c42b8
    modified: 1655957554123
    created: 1655957554123
    url: "{{ base_url }}/products/types"
    name: /products/types
    description: ""
    method: GET
    body: {}
    parameters: []
    headers:
      - name: User-Agent
        disabled: false
        value: "{{ userAgent }}"
    authentication: {}
    metaSortKey: -1655957554123
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_13d288ba15ef41e19b1769afb91c42b838a00715
    parentId: wrk_13d288ba15ef41e19b1769afb91c42b8
    modified: 1655957554122
    created: 1655957554122
    url: "{{ base_url }}/products/{{ productId }}"
    name: /products/{productId}
    description: ""
    method: GET
    body: {}
    parameters: []
    headers:
      - name: User-Agent
        disabled: false
        value: "{{ userAgent }}"
    authentication: {}
    metaSortKey: -1655957554122
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_13d288ba15ef41e19b1769afb91c42b8d5662d5e
    parentId: wrk_13d288ba15ef41e19b1769afb91c42b8
    modified: 1655957554116
    created: 1655957554116
    url: "{{ base_url }}/products/types/{{ typeId }}"
    name: /products/types/{typeId}
    description: ""
    method: GET
    body: {}
    parameters: []
    headers:
      - name: User-Agent
        disabled: false
        value: "{{ userAgent }}"
    authentication: {}
    metaSortKey: -1655957554116
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_13d288ba15ef41e19b1769afb91c42b80ba954f9
    parentId: wrk_13d288ba15ef41e19b1769afb91c42b8
    modified: 1655957554110
    created: 1655957554110
    url: "{{ base_url }}/products/types/{{ typeId }}/locations"
    name: /products/types/{typeId}/locations
    description: ""
    method: GET
    body: {}
    parameters: []
    headers:
      - name: User-Agent
        disabled: false
        value: "{{ userAgent }}"
    authentication: {}
    metaSortKey: -1655957554110
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_13d288ba15ef41e19b1769afb91c42b8e8f4d094
    parentId: wrk_13d288ba15ef41e19b1769afb91c42b8
    modified: 1655957554109
    created: 1655957554109
    url: "{{ base_url }}/products/locations/{{ locationId }}/types"
    name: /products/locations/{locationId}/types
    description: ""
    method: GET
    body: {}
    parameters: []
    headers:
      - name: User-Agent
        disabled: false
        value: "{{ userAgent }}"
    authentication: {}
    metaSortKey: -1655957554109
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_13d288ba15ef41e19b1769afb91c42b89eb97e23
    parentId: wrk_13d288ba15ef41e19b1769afb91c42b8
    modified: 1655957554108
    created: 1655957554108
    url: "{{ base_url }}/products/types/{{ typeId }}/locations/{{ locationId }}"
    name: /products/types/{typeId}/locations/{locationId}
    description: ""
    method: GET
    body: {}
    parameters: []
    headers:
      - name: User-Agent
        disabled: false
        value: "{{ userAgent }}"
    authentication: {}
    metaSortKey: -1655957554108
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_13d288ba15ef41e19b1769afb91c42b8d315a74c
    parentId: wrk_13d288ba15ef41e19b1769afb91c42b8
    modified: 1655958073120
    created: 1655957554106
    url: "{{ base_url }}/zones"
    name: /zones
    description: ""
    method: GET
    body: {}
    parameters:
      - name: id
        disabled: true
        value: string
        id: pair_29a99544ed65454081d0b9246e2c8d54
      - name: area
        disabled: true
        value: ""
        id: pair_de782021d4414b809c33ad2b904e987e
      - name: region
        disabled: true
        value: ""
        id: pair_f155bbc068d24d49ac41c428c51fe9f3
      - name: type
        disabled: true
        value: string
        id: pair_c6d51aae5cdf4e3eb91b4c08b4068fd0
      - name: point
        disabled: true
        value: string
        id: pair_d4ebaed6c66348e9b9785daf3464b735
      - name: include_geometry
        disabled: true
        value: "true"
        id: pair_eddacb11ffd1457590e251469504f522
      - name: limit
        disabled: true
        value: "0"
        id: pair_b67d352a6fba4756a8aa8a4ec2a4aab1
      - name: effective
        disabled: true
        value: 2022-06-23T04:12:34.089Z
        id: pair_1d012f45491e44179cde0e8a39b31a5b
    headers:
      - name: User-Agent
        disabled: false
        value: "{{ userAgent }}"
        id: pair_d36cfa1b9be24211a51fa529bf7ea373
    authentication: {}
    metaSortKey: -1655957554106
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_13d288ba15ef41e19b1769afb91c42b8a8e58620
    parentId: wrk_13d288ba15ef41e19b1769afb91c42b8
    modified: 1655958073880
    created: 1655957554104
    url: "{{ base_url }}/zones/{{ type }}"
    name: /zones/{type}
    description: ""
    method: GET
    body: {}
    parameters:
      - name: id
        disabled: true
        value: string
        id: pair_bbc2830d4d3d4e138140171a667d4ef9
      - name: area
        disabled: true
        value: ""
        id: pair_7332920ccfbb42d98f1a9ce6cb5fdb77
      - name: region
        disabled: true
        value: ""
        id: pair_82a6dffcd8ca45ab8f2e0029a5e8da09
      - name: type
        disabled: true
        value: string
        id: pair_e5a4b29eb5114b2cb581b93d9635d372
      - name: point
        disabled: true
        value: string
        id: pair_2c8309e4e9aa46d19d3b33465233f343
      - name: include_geometry
        disabled: true
        value: "true"
        id: pair_a6a32e03e3934b5d8083fe31c0a25644
      - name: limit
        disabled: true
        value: "0"
        id: pair_a87e0f289b9c48e18a123124b421c0a8
      - name: effective
        disabled: true
        value: 2022-06-23T04:12:34.089Z
        id: pair_ccfdae40b90b41769a5417b6e0fd78ac
    headers:
      - name: User-Agent
        disabled: false
        value: "{{ userAgent }}"
        id: pair_34fbadb1bc5649a8a2972ae5c97e2106
    authentication: {}
    metaSortKey: -1655957554104
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_13d288ba15ef41e19b1769afb91c42b8b6931b00
    parentId: wrk_13d288ba15ef41e19b1769afb91c42b8
    modified: 1655958086025
    created: 1655957554102
    url: "{{ base_url }}/zones/{{ type }}/{{ zoneId }}"
    name: /zones/{type}/{zoneId}
    description: ""
    method: GET
    body: {}
    parameters:
      - name: effective
        disabled: true
        value: 2022-06-23T04:12:34.089Z
        id: pair_bf151a1316bb47bcb31b1a825b3f9577
    headers:
      - name: User-Agent
        disabled: false
        value: "{{ userAgent }}"
        id: pair_7454f14482c6482b84f850a1aa30f18e
    authentication: {}
    metaSortKey: -1655957554102
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_13d288ba15ef41e19b1769afb91c42b81af20566
    parentId: wrk_13d288ba15ef41e19b1769afb91c42b8
    modified: 1655957554100
    created: 1655957554100
    url: "{{ base_url }}/zones/{{ type }}/{{ zoneId }}/forecast"
    name: /zones/{type}/{zoneId}/forecast
    description: ""
    method: GET
    body: {}
    parameters: []
    headers:
      - name: User-Agent
        disabled: false
        value: "{{ userAgent }}"
    authentication: {}
    metaSortKey: -1655957554100
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_13d288ba15ef41e19b1769afb91c42b816cacab1
    parentId: wrk_13d288ba15ef41e19b1769afb91c42b8
    modified: 1656167415929
    created: 1655957554098
    url: "{{ base_url }}/zones/forecast/{{ zoneId }}/observations"
    name: /zones/forecast/{zoneId}/observations
    description: ""
    method: GET
    body: {}
    parameters:
      - name: start
        disabled: true
        value: 2022-06-23T04:12:34.089Z
        id: pair_a35e9efc0a414df085140c750fe5bd13
      - name: end
        disabled: true
        value: 2022-06-23T04:12:34.089Z
        id: pair_c37fe5c87c724320a9e83c36b9a42172
      - name: limit
        disabled: true
        value: "0"
        id: pair_2bb2b9a2801c4b7eb810f85cfcafdfac
    headers:
      - name: User-Agent
        disabled: false
        value: "{{ userAgent }}"
        id: pair_35aba849ec51457b9720bfaf54b19161
    authentication: {}
    metaSortKey: -1655957554098
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_wrk_13d288ba15ef41e19b1769afb91c42b82d78867e
    parentId: wrk_13d288ba15ef41e19b1769afb91c42b8
    modified: 1656167413720
    created: 1655957554097
    url: "{{ base_url }}/zones/forecast/{{ zoneId }}/stations"
    name: /zones/forecast/{zoneId}/stations
    description: ""
    method: GET
    body: {}
    parameters: []
    headers:
      - name: User-Agent
        disabled: false
        value: "{{ userAgent }}"
        id: pair_56cef353bf6045a0892e8b4b5b2ddb77
    authentication: {}
    metaSortKey: -1655957554097
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: env_5c6987708e46b88180accf01c2dcf65128e4ffed
    parentId: wrk_13d288ba15ef41e19b1769afb91c42b8
    modified: 1656167246944
    created: 1655954294461
    name: Base environment
    data: {}
    dataPropertyOrder: {}
    color: null
    isPrivate: false
    metaSortKey: 1655954294461
    _type: environment
  - _id: jar_5c6987708e46b88180accf01c2dcf65128e4ffed
    parentId: wrk_13d288ba15ef41e19b1769afb91c42b8
    modified: 1655954294462
    created: 1655954294462
    name: Default Jar
    cookies: []
    _type: cookie_jar
  - _id: spc_dca3c401569544e2a39059ef3b595611
    parentId: wrk_13d288ba15ef41e19b1769afb91c42b8
    modified: 1655957554346
    created: 1655954294458
    fileName: Weather.Gov API
    contents: >-
      {
          "openapi": "3.0.3",
          "info": {
              "title": "weather.gov API",
              "description": "weather.gov API",
              "version": "1.8.3"
          },
          "servers": [
              {
                  "url": "https:\/\/api.weather.gov",
                  "description": "Production server"
              }
          ],
          "paths": {
              "\/alerts": {
                  "get": {
                      "description": "Returns all alerts",
                      "operationId": "alerts_query",
                      "parameters": [
                          {
                              "name": "active",
                              "in": "query",
                              "description": "List only active alerts (use \/alerts\/active endpoints instead)",
                              "deprecated": true,
                              "schema": {
                                  "type": "boolean"
                              }
                          },
                          {
                              "$ref": "#\/components\/parameters\/QueryStartTime"
                          },
                          {
                              "$ref": "#\/components\/parameters\/QueryEndTime"
                          },
                          {
                              "$ref": "#\/components\/parameters\/AlertStatus"
                          },
                          {
                              "$ref": "#\/components\/parameters\/AlertMessageType"
                          },
                          {
                              "$ref": "#\/components\/parameters\/AlertEventName"
                          },
                          {
                              "$ref": "#\/components\/parameters\/AlertCode"
                          },
                          {
                              "$ref": "#\/components\/parameters\/AlertArea"
                          },
                          {
                              "$ref": "#\/components\/parameters\/AlertPoint"
                          },
                          {
                              "$ref": "#\/components\/parameters\/AlertRegion"
                          },
                          {
                              "$ref": "#\/components\/parameters\/AlertRegionType"
                          },
                          {
                              "$ref": "#\/components\/parameters\/AlertZone"
                          },
                          {
                              "$ref": "#\/components\/parameters\/AlertUrgency"
                          },
                          {
                              "$ref": "#\/components\/parameters\/AlertSeverity"
                          },
                          {
                              "$ref": "#\/components\/parameters\/AlertCertainty"
                          },
                          {
                              "$ref": "#\/components\/parameters\/Limit"
                          },
                          {
                              "$ref": "#\/components\/parameters\/PaginationCursor"
                          }
                      ],
                      "responses": {
                          "200": {
                              "$ref": "#\/components\/responses\/AlertCollection"
                          },
                          "301": {
                              "description": "Certain common queries may be redirected to discrete URLs"
                          },
                          "default": {
                              "$ref": "#\/components\/responses\/Error"
                          }
                      }
                  }
              },
              "\/alerts\/active": {
                  "get": {
                      "description": "Returns all currently active alerts",
                      "operationId": "alerts_active",
                      "parameters": [
                          {
                              "$ref": "#\/components\/parameters\/AlertStatus"
                          },
                          {
                              "$ref": "#\/components\/parameters\/AlertMessageType"
                          },
                          {
                              "$ref": "#\/components\/parameters\/AlertEventName"
                          },
                          {
                              "$ref": "#\/components\/parameters\/AlertCode"
                          },
                          {
                              "$ref": "#\/components\/parameters\/AlertArea"
                          },
                          {
                              "$ref": "#\/components\/parameters\/AlertPoint"
                          },
                          {
                              "$ref": "#\/components\/parameters\/AlertRegion"
                          },
                          {
                              "$ref": "#\/components\/parameters\/AlertRegionType"
                          },
                          {
                              "$ref": "#\/components\/parameters\/AlertZone"
                          },
                          {
                              "$ref": "#\/components\/parameters\/AlertUrgency"
                          },
                          {
                              "$ref": "#\/components\/parameters\/AlertSeverity"
                          },
                          {
                              "$ref": "#\/components\/parameters\/AlertCertainty"
                          },
                          {
                              "$ref": "#\/components\/parameters\/Limit"
                          }
                      ],
                      "responses": {
                          "200": {
                              "$ref": "#\/components\/responses\/AlertCollection"
                          },
                          "301": {
                              "description": "Certain common queries may be redirected to discrete URLs"
                          },
                          "default": {
                              "$ref": "#\/components\/responses\/Error"
                          }
                      }
                  }
              },
              "\/alerts\/active\/count": {
                  "get": {
                      "description": "Returns info on the number of active alerts",
                      "operationId": "alerts_active_count",
                      "responses": {
                          "200": {
                              "description": "A data structure showing the counts of active alerts broken down by various categories",
                              "headers": {
                                  "X-Correlation-Id": {
                                      "$ref": "#\/components\/headers\/CorrelationId"
                                  },
                                  "X-Request-Id": {
                                      "$ref": "#\/components\/headers\/RequestId"
                                  },
                                  "X-Server-Id": {
                                      "$ref": "#\/components\/headers\/ServerId"
                                  }
                              },
                              "content": {
                                  "application\/ld+json": {
                                      "schema": {
                                          "type": "object",
                                          "properties": {
                                              "total": {
                                                  "minimum": 0,
                                                  "type": "integer",
                                                  "description": "The total number of active alerts"
                                              },
                                              "land": {
                                                  "minimum": 0,
                                                  "type": "integer",
                                                  "description": "The total number of active alerts affecting land zones"
                                              },
                                              "marine": {
                                                  "minimum": 0,
                                                  "type": "integer",
                                                  "description": "The total number of active alerts affecting marine zones"
                                              },
                                              "regions": {
                                                  "type": "object",
                                                  "description": "Active alerts by marine region",
                                                  "additionalProperties": {
                                                      "minimum": 1,
                                                      "type": "integer"
                                                  }
                                              },
                                              "areas": {
                                                  "type": "object",
                                                  "description": "Active alerts by area (state\/territory)",
                                                  "additionalProperties": {
                                                      "minimum": 1,
                                                      "type": "integer"
                                                  }
                                              },
                                              "zones": {
                                                  "type": "object",
                                                  "description": "Active alerts by NWS public zone or county code",
                                                  "additionalProperties": {
                                                      "minimum": 1,
                                                      "type": "integer"
                                                  }
                                              }
                                          }
                                      }
                                  }
                              }
                          },
                          "default": {
                              "$ref": "#\/components\/responses\/Error"
                          }
                      },
                      "parameters": []
                  }
              },
              "\/alerts\/active\/zone\/{zoneId}": {
                  "get": {
                      "description": "Returns active alerts for the given NWS public zone or county",
                      "operationId": "alerts_active_zone",
                      "responses": {
                          "200": {
                              "$ref": "#\/components\/responses\/AlertCollection"
                          },
                          "default": {
                              "$ref": "#\/components\/responses\/Error"
                          }
                      },
                      "parameters": []
                  },
                  "parameters": [
                      {
                          "$ref": "#\/components\/parameters\/NWSZoneId"
                      }
                  ]
              },
              "\/alerts\/active\/area\/{area}": {
                  "get": {
                      "description": "Returns active alerts for the given area (state or marine area)",
                      "operationId": "alerts_active_area",
                      "responses": {
                          "200": {
                              "$ref": "#\/components\/responses\/AlertCollection"
                          },
                          "default": {
                              "$ref": "#\/components\/responses\/Error"
                          }
                      },
                      "parameters": []
                  },
                  "parameters": [
                      {
                          "name": "area",
                          "in": "path",
                          "description": "State\/area ID",
                          "required": true,
                          "schema": {
                              "$ref": "#\/components\/schemas\/AreaCode"
                          }
                      }
                  ]
              },
              "\/alerts\/active\/region\/{region}": {
                  "get": {
                      "description": "Returns active alerts for the given marine region",
                      "operationId": "alerts_active_region",
                      "responses": {
                          "200": {
                              "$ref": "#\/components\/responses\/AlertCollection"
                          },
                          "default": {
                              "$ref": "#\/components\/responses\/Error"
                          }
                      },
                      "parameters": []
                  },
                  "parameters": [
                      {
                          "name": "region",
                          "in": "path",
                          "description": "Marine region ID",
                          "required": true,
                          "schema": {
                              "$ref": "#\/components\/schemas\/MarineRegionCode"
                          }
                      }
                  ]
              },
              "\/alerts\/types": {
                  "get": {
                      "description": "Returns a list of alert types",
                      "operationId": "alerts_types",
                      "responses": {
                          "200": {
                              "description": "A list of recognized event types",
                              "headers": {
                                  "X-Correlation-Id": {
                                      "$ref": "#\/components\/headers\/CorrelationId"
                                  },
                                  "X-Request-Id": {
                                      "$ref": "#\/components\/headers\/RequestId"
                                  },
                                  "X-Server-Id": {
                                      "$ref": "#\/components\/headers\/ServerId"
                                  }
                              },
                              "content": {
                                  "application\/ld+json": {
                                      "schema": {
                                          "type": "object",
                                          "properties": {
                                              "eventTypes": {
                                                  "type": "array",
                                                  "items": {
                                                      "type": "string"
                                                  },
                                                  "description": "A list of recognized event types"
                                              }
                                          }
                                      }
                                  }
                              }
                          },
                          "default": {
                              "$ref": "#\/components\/responses\/Error"
                          }
                      },
                      "parameters": []
                  }
              },
              "\/alerts\/{id}": {
                  "get": {
                      "description": "Returns a specific alert",
                      "operationId": "alerts_single",
                      "responses": {
                          "200": {
                              "description": "An alert record",
                              "headers": {
                                  "X-Correlation-Id": {
                                      "$ref": "#\/components\/headers\/CorrelationId"
                                  },
                                  "X-Request-Id": {
                                      "$ref": "#\/components\/headers\/RequestId"
                                  },
                                  "X-Server-Id": {
                                      "$ref": "#\/components\/headers\/ServerId"
                                  }
                              },
                              "content": {
                                  "application\/geo+json": {
                                      "schema": {
                                          "$ref": "#\/components\/schemas\/AlertGeoJson"
                                      }
                                  },
                                  "application\/ld+json": {
                                      "schema": {
                                          "$ref": "#\/components\/schemas\/AlertJsonLd"
                                      }
                                  },
                                  "application\/cap+xml": {
                                      "schema": {
                                          "$ref": "#\/components\/schemas\/AlertCap"
                                      }
                                  }
                              }
                          },
                          "default": {
                              "$ref": "#\/components\/responses\/Error"
                          }
                      },
                      "parameters": []
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "Alert identifier",
                          "required": true,
                          "schema": {
                              "$ref": "#\/components\/schemas\/AlertId"
                          }
                      }
                  ]
              },
              "\/glossary": {
                  "get": {
                      "description": "Returns glossary terms",
                      "operationId": "glossary",
                      "responses": {
                          "200": {
                              "description": "A set of glossary terms",
                              "headers": {
                                  "X-Correlation-Id": {
                                      "$ref": "#\/components\/headers\/CorrelationId"
                                  },
                                  "X-Request-Id": {
                                      "$ref": "#\/components\/headers\/RequestId"
                                  },
                                  "X-Server-Id": {
                                      "$ref": "#\/components\/headers\/ServerId"
                                  }
                              },
                              "content": {
                                  "application\/ld+json": {
                                      "schema": {
                                          "type": "object",
                                          "properties": {
                                              "@context": {
                                                  "$ref": "#\/components\/schemas\/JsonLdContext"
                                              },
                                              "glossary": {
                                                  "type": "array",
                                                  "items": {
                                                      "type": "object",
                                                      "properties": {
                                                          "term": {
                                                              "type": "string",
                                                              "description": "The term being defined"
                                                          },
                                                          "definition": {
                                                              "type": "string",
                                                              "description": "A definition for the term"
                                                          }
                                                      }
                                                  },
                                                  "description": "A list of glossary terms"
                                              }
                                          }
                                      }
                                  }
                              }
                          },
                          "default": {
                              "$ref": "#\/components\/responses\/Error"
                          }
                      },
                      "parameters": []
                  }
              },
              "\/gridpoints\/{wfo}\/{x},{y}": {
                  "get": {
                      "description": "Returns raw numerical forecast data for a 2.5km grid area",
                      "operationId": "gridpoint",
                      "parameters": [],
                      "responses": {
                          "200": {
                              "description": "Gridpoint forecast data",
                              "headers": {
                                  "X-Correlation-Id": {
                                      "$ref": "#\/components\/headers\/CorrelationId"
                                  },
                                  "X-Request-Id": {
                                      "$ref": "#\/components\/headers\/RequestId"
                                  },
                                  "X-Server-Id": {
                                      "$ref": "#\/components\/headers\/ServerId"
                                  }
                              },
                              "content": {
                                  "application\/geo+json": {
                                      "schema": {
                                          "$ref": "#\/components\/schemas\/GridpointGeoJson"
                                      }
                                  },
                                  "application\/ld+json": {
                                      "schema": {
                                          "$ref": "#\/components\/schemas\/GridpointJsonLd"
                                      }
                                  }
                              }
                          },
                          "default": {
                              "$ref": "#\/components\/responses\/Error"
                          }
                      }
                  },
                  "parameters": [
                      {
                          "$ref": "#\/components\/parameters\/GridpointWFO"
                      },
                      {
                          "$ref": "#\/components\/parameters\/GridpointX"
                      },
                      {
                          "$ref": "#\/components\/parameters\/GridpointY"
                      }
                  ]
              },
              "\/gridpoints\/{wfo}\/{x},{y}\/forecast": {
                  "get": {
                      "description": "Returns a textual forecast for a 2.5km grid area",
                      "operationId": "gridpoint_forecast",
                      "parameters": [
                          {
                              "$ref": "#\/components\/parameters\/GridpointForecastFeatureFlags"
                          },
                          {
                              "$ref": "#\/components\/parameters\/GridpointForecastUnits"
                          }
                      ],
                      "responses": {
                          "200": {
                              "$ref": "#\/components\/responses\/GridpointForecast"
                          },
                          "default": {
                              "$ref": "#\/components\/responses\/Error"
                          }
                      }
                  },
                  "parameters": [
                      {
                          "$ref": "#\/components\/parameters\/GridpointWFO"
                      },
                      {
                          "$ref": "#\/components\/parameters\/GridpointX"
                      },
                      {
                          "$ref": "#\/components\/parameters\/GridpointY"
                      }
                  ]
              },
              "\/gridpoints\/{wfo}\/{x},{y}\/forecast\/hourly": {
                  "get": {
                      "description": "Returns a textual hourly forecast for a 2.5km grid area",
                      "operationId": "gridpoint_forecast_hourly",
                      "parameters": [
                          {
                              "$ref": "#\/components\/parameters\/GridpointForecastFeatureFlags"
                          },
                          {
                              "$ref": "#\/components\/parameters\/GridpointForecastUnits"
                          }
                      ],
                      "responses": {
                          "200": {
                              "$ref": "#\/components\/responses\/GridpointForecast"
                          },
                          "default": {
                              "$ref": "#\/components\/responses\/Error"
                          }
                      }
                  },
                  "parameters": [
                      {
                          "$ref": "#\/components\/parameters\/GridpointWFO"
                      },
                      {
                          "$ref": "#\/components\/parameters\/GridpointX"
                      },
                      {
                          "$ref": "#\/components\/parameters\/GridpointY"
                      }
                  ]
              },
              "\/gridpoints\/{wfo}\/{x},{y}\/stations": {
                  "get": {
                      "description": "Returns a list of observation stations usable for a given 2.5km grid area",
                      "operationId": "gridpoint_stations",
                      "responses": {
                          "200": {
                              "$ref": "#\/components\/responses\/ObservationStationCollection"
                          },
                          "default": {
                              "$ref": "#\/components\/responses\/Error"
                          }
                      },
                      "parameters": []
                  },
                  "parameters": [
                      {
                          "$ref": "#\/components\/parameters\/GridpointWFO"
                      },
                      {
                          "$ref": "#\/components\/parameters\/GridpointX"
                      },
                      {
                          "$ref": "#\/components\/parameters\/GridpointY"
                      }
                  ]
              },
              "\/icons\/{set}\/{timeOfDay}\/{first}": {
                  "get": {
                      "description": "Returns a forecast icon. Icon services in API are deprecated.",
                      "operationId": "icons",
                      "responses": {
                          "200": {
                              "description": "success",
                              "headers": {
                                  "X-Correlation-Id": {
                                      "$ref": "#\/components\/headers\/CorrelationId"
                                  },
                                  "X-Request-Id": {
                                      "$ref": "#\/components\/headers\/RequestId"
                                  },
                                  "X-Server-Id": {
                                      "$ref": "#\/components\/headers\/ServerId"
                                  }
                              },
                              "content": {
                                  "image\/png": {
                                      "schema": {
                                          "$ref": "#\/components\/schemas\/BinaryFile"
                                      }
                                  }
                              }
                          },
                          "default": {
                              "$ref": "#\/components\/responses\/Error"
                          }
                      },
                      "deprecated": true,
                      "parameters": []
                  },
                  "parameters": [
                      {
                          "name": "set",
                          "in": "path",
                          "description": ".",
                          "required": true,
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "timeOfDay",
                          "in": "path",
                          "description": ".",
                          "required": true,
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "first",
                          "in": "path",
                          "description": ".",
                          "required": true,
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "size",
                          "in": "query",
                          "description": "Font size",
                          "schema": {
                              "anyOf": [
                                  {
                                      "enum": [
                                          "small",
                                          "medium",
                                          "large"
                                      ],
                                      "type": "string"
                                  },
                                  {
                                      "maximum": 500,
                                      "minimum": 10,
                                      "type": "integer"
                                  }
                              ]
                          }
                      },
                      {
                          "name": "fontsize",
                          "in": "query",
                          "description": "Font size",
                          "schema": {
                              "maximum": 24,
                              "minimum": 2,
                              "type": "integer"
                          }
                      }
                  ]
              },
              "\/icons\/{set}\/{timeOfDay}\/{first}\/{second}": {
                  "get": {
                      "description": "Returns a forecast icon. Icon services in API are deprecated.",
                      "operationId": "iconsDualCondition",
                      "responses": {
                          "200": {
                              "description": "success",
                              "headers": {
                                  "X-Correlation-Id": {
                                      "$ref": "#\/components\/headers\/CorrelationId"
                                  },
                                  "X-Request-Id": {
                                      "$ref": "#\/components\/headers\/RequestId"
                                  },
                                  "X-Server-Id": {
                                      "$ref": "#\/components\/headers\/ServerId"
                                  }
                              },
                              "content": {
                                  "image\/png": {
                                      "schema": {
                                          "$ref": "#\/components\/schemas\/BinaryFile"
                                      }
                                  }
                              }
                          },
                          "default": {
                              "$ref": "#\/components\/responses\/Error"
                          }
                      },
                      "deprecated": true,
                      "parameters": []
                  },
                  "parameters": [
                      {
                          "name": "set",
                          "in": "path",
                          "description": ".",
                          "required": true,
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "timeOfDay",
                          "in": "path",
                          "description": ".",
                          "required": true,
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "first",
                          "in": "path",
                          "description": ".",
                          "required": true,
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "second",
                          "in": "path",
                          "description": ".",
                          "required": true,
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "size",
                          "in": "query",
                          "description": "Font size",
                          "schema": {
                              "anyOf": [
                                  {
                                      "enum": [
                                          "small",
                                          "medium",
                                          "large"
                                      ],
                                      "type": "string"
                                  },
                                  {
                                      "maximum": 500,
                                      "minimum": 10,
                                      "type": "integer"
                                  }
                              ]
                          }
                      },
                      {
                          "name": "fontsize",
                          "in": "query",
                          "description": "Font size",
                          "schema": {
                              "maximum": 24,
                              "minimum": 2,
                              "type": "integer"
                          }
                      }
                  ]
              },
              "\/icons": {
                  "get": {
                      "description": "Returns a list of icon codes and textual descriptions. Icon services in API are deprecated.",
                      "operationId": "icons_summary",
                      "responses": {
                          "200": {
                              "description": "success",
                              "headers": {
                                  "X-Correlation-Id": {
                                      "$ref": "#\/components\/headers\/CorrelationId"
                                  },
                                  "X-Request-Id": {
                                      "$ref": "#\/components\/headers\/RequestId"
                                  },
                                  "X-Server-Id": {
                                      "$ref": "#\/components\/headers\/ServerId"
                                  }
                              },
                              "content": {
                                  "application\/ld+json": {
                                      "schema": {
                                          "required": [
                                              "icons"
                                          ],
                                          "type": "object",
                                          "properties": {
                                              "@context": {
                                                  "$ref": "#\/components\/schemas\/JsonLdContext"
                                              },
                                              "icons": {
                                                  "type": "object",
                                                  "additionalProperties": {
                                                      "required": [
                                                          "description"
                                                      ],
                                                      "type": "object",
                                                      "properties": {
                                                          "description": {
                                                              "type": "string"
                                                          }
                                                      },
                                                      "additionalProperties": false
                                                  }
                                              }
                                          },
                                          "additionalProperties": false
                                      }
                                  }
                              }
                          },
                          "default": {
                              "$ref": "#\/components\/responses\/Error"
                          }
                      },
                      "deprecated": true,
                      "parameters": []
                  }
              },
              "\/thumbnails\/satellite\/{area}": {
                  "get": {
                      "description": "Returns a thumbnail image for a satellite region. Image services in API are deprecated.",
                      "operationId": "satellite_thumbnails",
                      "responses": {
                          "200": {
                              "description": "An image file",
                              "headers": {
                                  "X-Correlation-Id": {
                                      "$ref": "#\/components\/headers\/CorrelationId"
                                  },
                                  "X-Request-Id": {
                                      "$ref": "#\/components\/headers\/RequestId"
                                  },
                                  "X-Server-Id": {
                                      "$ref": "#\/components\/headers\/ServerId"
                                  }
                              },
                              "content": {
                                  "image\/jpeg": {
                                      "schema": {
                                          "$ref": "#\/components\/schemas\/BinaryFile"
                                      }
                                  }
                              }
                          },
                          "default": {
                              "$ref": "#\/components\/responses\/Error"
                          }
                      },
                      "deprecated": true,
                      "parameters": []
                  },
                  "parameters": [
                      {
                          "name": "area",
                          "in": "path",
                          "description": ".",
                          "required": true,
                          "schema": {
                              "enum": [
                                  "a",
                                  "e",
                                  "g",
                                  "h",
                                  "p",
                                  "s",
                                  "w"
                              ],
                              "type": "string"
                          }
                      }
                  ]
              },
              "\/stations\/{stationId}\/observations": {
                  "get": {
                      "description": "Returns a list of observations for a given station",
                      "operationId": "station_observation_list",
                      "parameters": [
                          {
                              "$ref": "#\/components\/parameters\/QueryStartTime"
                          },
                          {
                              "$ref": "#\/components\/parameters\/QueryEndTime"
                          },
                          {
                              "name": "limit",
                              "in": "query",
                              "description": "Limit",
                              "schema": {
                                  "maximum": 500,
                                  "minimum": 1,
                                  "type": "integer"
                              }
                          }
                      ],
                      "responses": {
                          "200": {
                              "$ref": "#\/components\/responses\/ObservationCollection"
                          },
                          "default": {
                              "$ref": "#\/components\/responses\/Error"
                          }
                      }
                  },
                  "parameters": [
                      {
                          "$ref": "#\/components\/parameters\/ObservationStationId"
                      }
                  ]
              },
              "\/stations\/{stationId}\/observations\/latest": {
                  "get": {
                      "description": "Returns the latest observation for a station",
                      "operationId": "station_observation_latest",
                      "parameters": [
                          {
                              "name": "require_qc",
                              "in": "query",
                              "description": "Require QC",
                              "schema": {
                                  "type": "boolean"
                              }
                          }
                      ],
                      "responses": {
                          "200": {
                              "$ref": "#\/components\/responses\/Observation"
                          },
                          "default": {
                              "$ref": "#\/components\/responses\/Error"
                          }
                      }
                  },
                  "parameters": [
                      {
                          "$ref": "#\/components\/parameters\/ObservationStationId"
                      }
                  ]
              },
              "\/stations\/{stationId}\/observations\/{time}": {
                  "get": {
                      "description": "Returns a single observation.",
                      "operationId": "station_observation_time",
                      "parameters": [
                          {
                              "name": "time",
                              "in": "path",
                              "description": "Timestamp of requested observation",
                              "required": true,
                              "schema": {
                                  "type": "string",
                                  "format": "date-time"
                              }
                          }
                      ],
                      "responses": {
                          "200": {
                              "$ref": "#\/components\/responses\/Observation"
                          },
                          "default": {
                              "$ref": "#\/components\/responses\/Error"
                          }
                      }
                  },
                  "parameters": [
                      {
                          "$ref": "#\/components\/parameters\/ObservationStationId"
                      }
                  ]
              },
              "\/stations": {
                  "get": {
                      "description": "Returns a list of observation stations.",
                      "operationId": "obs_stations",
                      "parameters": [
                          {
                              "name": "id",
                              "in": "query",
                              "description": "Filter by observation station ID",
                              "style": "form",
                              "explode": false,
                              "schema": {
                                  "type": "array",
                                  "items": {
                                      "type": "string"
                                  }
                              }
                          },
                          {
                              "name": "state",
                              "in": "query",
                              "description": "Filter by state\/marine area code",
                              "style": "form",
                              "explode": false,
                              "schema": {
                                  "type": "array",
                                  "items": {
                                      "$ref": "#\/components\/schemas\/AreaCode"
                                  }
                              }
                          },
                          {
                              "name": "limit",
                              "in": "query",
                              "description": "Limit",
                              "schema": {
                                  "maximum": 500,
                                  "minimum": 1,
                                  "type": "integer"
                              }
                          }
                      ],
                      "responses": {
                          "200": {
                              "$ref": "#\/components\/responses\/ObservationStationCollection"
                          },
                          "default": {
                              "$ref": "#\/components\/responses\/Error"
                          }
                      }
                  }
              },
              "\/stations\/{stationId}": {
                  "get": {
                      "description": "Returns metadata about a given observation station",
                      "operationId": "obs_station",
                      "responses": {
                          "200": {
                              "description": "success",
                              "headers": {
                                  "X-Correlation-Id": {
                                      "$ref": "#\/components\/headers\/CorrelationId"
                                  },
                                  "X-Request-Id": {
                                      "$ref": "#\/components\/headers\/RequestId"
                                  },
                                  "X-Server-Id": {
                                      "$ref": "#\/components\/headers\/ServerId"
                                  }
                              },
                              "content": {
                                  "application\/geo+json": {
                                      "schema": {
                                          "$ref": "#\/components\/schemas\/ObservationStationGeoJson"
                                      }
                                  },
                                  "application\/ld+json": {
                                      "schema": {
                                          "$ref": "#\/components\/schemas\/ObservationStationJsonLd"
                                      }
                                  }
                              }
                          },
                          "default": {
                              "$ref": "#\/components\/responses\/Error"
                          }
                      },
                      "parameters": []
                  },
                  "parameters": [
                      {
                          "$ref": "#\/components\/parameters\/ObservationStationId"
                      }
                  ]
              },
              "\/offices\/{officeId}": {
                  "get": {
                      "description": "Returns metadata about a NWS forecast office",
                      "operationId": "office",
                      "responses": {
                          "200": {
                              "description": "success",
                              "headers": {
                                  "X-Correlation-Id": {
                                      "$ref": "#\/components\/headers\/CorrelationId"
                                  },
                                  "X-Request-Id": {
                                      "$ref": "#\/components\/headers\/RequestId"
                                  },
                                  "X-Server-Id": {
                                      "$ref": "#\/components\/headers\/ServerId"
                                  }
                              },
                              "content": {
                                  "application\/ld+json": {
                                      "schema": {
                                          "$ref": "#\/components\/schemas\/Office"
                                      }
                                  }
                              }
                          },
                          "default": {
                              "$ref": "#\/components\/responses\/Error"
                          }
                      },
                      "parameters": []
                  },
                  "parameters": [
                      {
                          "$ref": "#\/components\/parameters\/NWSForecastOfficeId"
                      }
                  ]
              },
              "\/offices\/{officeId}\/headlines\/{headlineId}": {
                  "get": {
                      "description": "Returns a specific news headline for a given NWS office",
                      "operationId": "office_headline",
                      "responses": {
                          "200": {
                              "description": "success",
                              "headers": {
                                  "X-Correlation-Id": {
                                      "$ref": "#\/components\/headers\/CorrelationId"
                                  },
                                  "X-Request-Id": {
                                      "$ref": "#\/components\/headers\/RequestId"
                                  },
                                  "X-Server-Id": {
                                      "$ref": "#\/components\/headers\/ServerId"
                                  }
                              },
                              "content": {
                                  "application\/ld+json": {
                                      "schema": {
                                          "$ref": "#\/components\/schemas\/OfficeHeadline"
                                      }
                                  }
                              }
                          },
                          "default": {
                              "$ref": "#\/components\/responses\/Error"
                          }
                      },
                      "parameters": []
                  },
                  "parameters": [
                      {
                          "$ref": "#\/components\/parameters\/NWSForecastOfficeId"
                      },
                      {
                          "name": "headlineId",
                          "in": "path",
                          "description": "Headline record ID",
                          "required": true,
                          "schema": {
                              "type": "string"
                          }
                      }
                  ]
              },
              "\/offices\/{officeId}\/headlines": {
                  "get": {
                      "description": "Returns a list of news headlines for a given NWS office",
                      "operationId": "office_headlines",
                      "responses": {
                          "200": {
                              "description": "success",
                              "headers": {
                                  "X-Correlation-Id": {
                                      "$ref": "#\/components\/headers\/CorrelationId"
                                  },
                                  "X-Request-Id": {
                                      "$ref": "#\/components\/headers\/RequestId"
                                  },
                                  "X-Server-Id": {
                                      "$ref": "#\/components\/headers\/ServerId"
                                  }
                              },
                              "content": {
                                  "application\/ld+json": {
                                      "schema": {
                                          "$ref": "#\/components\/schemas\/OfficeHeadlineCollection"
                                      }
                                  }
                              }
                          },
                          "default": {
                              "$ref": "#\/components\/responses\/Error"
                          }
                      },
                      "parameters": []
                  },
                  "parameters": [
                      {
                          "$ref": "#\/components\/parameters\/NWSForecastOfficeId"
                      }
                  ]
              },
              "\/points\/{point}": {
                  "get": {
                      "description": "Returns metadata about a given latitude\/longitude point",
                      "operationId": "point",
                      "responses": {
                          "200": {
                              "description": "success",
                              "headers": {
                                  "X-Correlation-Id": {
                                      "$ref": "#\/components\/headers\/CorrelationId"
                                  },
                                  "X-Request-Id": {
                                      "$ref": "#\/components\/headers\/RequestId"
                                  },
                                  "X-Server-Id": {
                                      "$ref": "#\/components\/headers\/ServerId"
                                  }
                              },
                              "content": {
                                  "application\/geo+json": {
                                      "schema": {
                                          "$ref": "#\/components\/schemas\/PointGeoJson"
                                      }
                                  },
                                  "application\/ld+json": {
                                      "schema": {
                                          "$ref": "#\/components\/schemas\/PointJsonLd"
                                      }
                                  }
                              }
                          },
                          "default": {
                              "$ref": "#\/components\/responses\/Error"
                          }
                      },
                      "parameters": []
                  },
                  "parameters": [
                      {
                          "$ref": "#\/components\/parameters\/PathPoint"
                      }
                  ]
              },
              "\/points\/{point}\/stations": {
                  "get": {
                      "description": "Returns a list of observation stations for a given point",
                      "operationId": "point_stations",
                      "responses": {
                          "301": {
                              "description": "redirect to gridpoint stations"
                          },
                          "default": {
                              "$ref": "#\/components\/responses\/Error"
                          }
                      },
                      "deprecated": true,
                      "parameters": []
                  },
                  "parameters": [
                      {
                          "$ref": "#\/components\/parameters\/PathPoint"
                      }
                  ]
              },
              "\/radar\/servers": {
                  "get": {
                      "description": "Returns a list of radar servers",
                      "operationId": "radar_servers",
                      "parameters": [
                          {
                              "name": "reportingHost",
                              "in": "query",
                              "description": "Show records from specific reporting host",
                              "schema": {
                                  "type": "string"
                              }
                          }
                      ],
                      "responses": {
                          "200": {
                              "description": "success",
                              "headers": {
                                  "X-Correlation-Id": {
                                      "$ref": "#\/components\/headers\/CorrelationId"
                                  },
                                  "X-Request-Id": {
                                      "$ref": "#\/components\/headers\/RequestId"
                                  },
                                  "X-Server-Id": {
                                      "$ref": "#\/components\/headers\/ServerId"
                                  }
                              },
                              "content": {
                                  "application\/ld+json": {
                                      "schema": []
                                  }
                              }
                          },
                          "default": {
                              "$ref": "#\/components\/responses\/Error"
                          }
                      }
                  }
              },
              "\/radar\/servers\/{id}": {
                  "get": {
                      "description": "Returns metadata about a given radar server",
                      "operationId": "radar_server",
                      "parameters": [
                          {
                              "name": "reportingHost",
                              "in": "query",
                              "description": "Show records from specific reporting host",
                              "schema": {
                                  "type": "string"
                              }
                          }
                      ],
                      "responses": {
                          "200": {
                              "description": "success",
                              "headers": {
                                  "X-Correlation-Id": {
                                      "$ref": "#\/components\/headers\/CorrelationId"
                                  },
                                  "X-Request-Id": {
                                      "$ref": "#\/components\/headers\/RequestId"
                                  },
                                  "X-Server-Id": {
                                      "$ref": "#\/components\/headers\/ServerId"
                                  }
                              },
                              "content": {
                                  "application\/ld+json": {
                                      "schema": []
                                  }
                              }
                          },
                          "default": {
                              "$ref": "#\/components\/responses\/Error"
                          }
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "Server ID",
                          "required": true,
                          "schema": {
                              "type": "string"
                          }
                      }
                  ]
              },
              "\/radar\/stations": {
                  "get": {
                      "description": "Returns a list of radar stations",
                      "operationId": "radar_stations",
                      "parameters": [
                          {
                              "name": "stationType",
                              "in": "query",
                              "description": "Limit results to a specific station type or types",
                              "style": "form",
                              "explode": false,
                              "schema": {
                                  "type": "array",
                                  "items": {
                                      "pattern": "^[A-Za-z0-9-]+$",
                                      "type": "string"
                                  }
                              }
                          },
                          {
                              "name": "reportingHost",
                              "in": "query",
                              "description": "Show RDA and latency info from specific reporting host",
                              "schema": {
                                  "type": "string"
                              }
                          },
                          {
                              "name": "host",
                              "in": "query",
                              "description": "Show latency info from specific LDM host",
                              "schema": {
                                  "type": "string"
                              }
                          }
                      ],
                      "responses": {
                          "200": {
                              "description": "success",
                              "headers": {
                                  "X-Correlation-Id": {
                                      "$ref": "#\/components\/headers\/CorrelationId"
                                  },
                                  "X-Request-Id": {
                                      "$ref": "#\/components\/headers\/RequestId"
                                  },
                                  "X-Server-Id": {
                                      "$ref": "#\/components\/headers\/ServerId"
                                  }
                              },
                              "content": {
                                  "application\/geo+json": {
                                      "schema": []
                                  },
                                  "application\/ld+json": {
                                      "schema": []
                                  }
                              }
                          },
                          "default": {
                              "$ref": "#\/components\/responses\/Error"
                          }
                      }
                  }
              },
              "\/radar\/stations\/{stationId}": {
                  "get": {
                      "description": "Returns metadata about a given radar station",
                      "operationId": "radar_station",
                      "parameters": [
                          {
                              "name": "reportingHost",
                              "in": "query",
                              "description": "Show RDA and latency info from specific reporting host",
                              "schema": {
                                  "type": "string"
                              }
                          },
                          {
                              "name": "host",
                              "in": "query",
                              "description": "Show latency info from specific LDM host",
                              "schema": {
                                  "type": "string"
                              }
                          }
                      ],
                      "responses": {
                          "200": {
                              "description": "success",
                              "headers": {
                                  "X-Correlation-Id": {
                                      "$ref": "#\/components\/headers\/CorrelationId"
                                  },
                                  "X-Request-Id": {
                                      "$ref": "#\/components\/headers\/RequestId"
                                  },
                                  "X-Server-Id": {
                                      "$ref": "#\/components\/headers\/ServerId"
                                  }
                              },
                              "content": {
                                  "application\/geo+json": {
                                      "schema": []
                                  },
                                  "application\/ld+json": {
                                      "schema": []
                                  }
                              }
                          },
                          "default": {
                              "$ref": "#\/components\/responses\/Error"
                          }
                      }
                  },
                  "parameters": [
                      {
                          "name": "stationId",
                          "in": "path",
                          "description": "Radar station ID",
                          "required": true,
                          "schema": {
                              "type": "string"
                          }
                      }
                  ]
              },
              "\/radar\/stations\/{stationId}\/alarms": {
                  "get": {
                      "description": "Returns metadata about a given radar station alarms",
                      "operationId": "radar_station_alarms",
                      "responses": {
                          "200": {
                              "description": "success",
                              "headers": {
                                  "X-Correlation-Id": {
                                      "$ref": "#\/components\/headers\/CorrelationId"
                                  },
                                  "X-Request-Id": {
                                      "$ref": "#\/components\/headers\/RequestId"
                                  },
                                  "X-Server-Id": {
                                      "$ref": "#\/components\/headers\/ServerId"
                                  }
                              },
                              "content": {
                                  "application\/ld+json": {
                                      "schema": []
                                  }
                              }
                          },
                          "default": {
                              "$ref": "#\/components\/responses\/Error"
                          }
                      },
                      "parameters": []
                  },
                  "parameters": [
                      {
                          "name": "stationId",
                          "in": "path",
                          "description": "Radar station ID",
                          "required": true,
                          "schema": {
                              "type": "string"
                          }
                      }
                  ]
              },
              "\/radar\/queues\/{host}": {
                  "get": {
                      "description": "Returns metadata about a given radar queue",
                      "operationId": "radar_queue",
                      "parameters": [
                          {
                              "name": "limit",
                              "in": "query",
                              "description": "Record limit",
                              "schema": {
                                  "maximum": 500,
                                  "minimum": 1,
                                  "type": "integer"
                              }
                          },
                          {
                              "name": "arrived",
                              "in": "query",
                              "description": "Range for arrival time",
                              "schema": {
                                  "$ref": "#\/components\/schemas\/ISO8601Interval"
                              }
                          },
                          {
                              "name": "created",
                              "in": "query",
                              "description": "Range for creation time",
                              "schema": {
                                  "$ref": "#\/components\/schemas\/ISO8601Interval"
                              }
                          },
                          {
                              "name": "published",
                              "in": "query",
                              "description": "Range for publish time",
                              "schema": {
                                  "$ref": "#\/components\/schemas\/ISO8601Interval"
                              }
                          },
                          {
                              "name": "station",
                              "in": "query",
                              "description": "Station identifier",
                              "schema": {
                                  "type": "string"
                              }
                          },
                          {
                              "name": "type",
                              "in": "query",
                              "description": "Record type",
                              "schema": {
                                  "type": "string"
                              }
                          },
                          {
                              "name": "feed",
                              "in": "query",
                              "description": "Originating product feed",
                              "schema": {
                                  "type": "string"
                              }
                          },
                          {
                              "name": "resolution",
                              "in": "query",
                              "description": "Resolution version",
                              "schema": {
                                  "minimum": 1,
                                  "type": "integer"
                              }
                          }
                      ],
                      "responses": {
                          "200": {
                              "description": "success",
                              "headers": {
                                  "X-Correlation-Id": {
                                      "$ref": "#\/components\/headers\/CorrelationId"
                                  },
                                  "X-Request-Id": {
                                      "$ref": "#\/components\/headers\/RequestId"
                                  },
                                  "X-Server-Id": {
                                      "$ref": "#\/components\/headers\/ServerId"
                                  }
                              },
                              "content": {
                                  "application\/ld+json": {
                                      "schema": []
                                  }
                              }
                          },
                          "default": {
                              "$ref": "#\/components\/responses\/Error"
                          }
                      }
                  },
                  "parameters": [
                      {
                          "name": "host",
                          "in": "path",
                          "description": "LDM host",
                          "required": true,
                          "schema": {
                              "type": "string"
                          }
                      }
                  ]
              },
              "\/radar\/profilers\/{stationId}": {
                  "get": {
                      "description": "Returns metadata about a given radar wind profiler",
                      "operationId": "radar_profiler",
                      "parameters": [
                          {
                              "name": "time",
                              "in": "query",
                              "description": "Time interval",
                              "schema": {
                                  "$ref": "#\/components\/schemas\/ISO8601Interval"
                              }
                          },
                          {
                              "name": "interval",
                              "in": "query",
                              "description": "Averaging interval",
                              "schema": {
                                  "$ref": "#\/components\/schemas\/ISO8601Duration"
                              }
                          }
                      ],
                      "responses": {
                          "200": {
                              "description": "success",
                              "headers": {
                                  "X-Correlation-Id": {
                                      "$ref": "#\/components\/headers\/CorrelationId"
                                  },
                                  "X-Request-Id": {
                                      "$ref": "#\/components\/headers\/RequestId"
                                  },
                                  "X-Server-Id": {
                                      "$ref": "#\/components\/headers\/ServerId"
                                  }
                              },
                              "content": {
                                  "application\/ld+json": {
                                      "schema": []
                                  }
                              }
                          },
                          "default": {
                              "$ref": "#\/components\/responses\/Error"
                          }
                      }
                  },
                  "parameters": [
                      {
                          "name": "stationId",
                          "in": "path",
                          "description": "Profiler station ID",
                          "required": true,
                          "schema": {
                              "type": "string"
                          }
                      }
                  ]
              },
              "\/products": {
                  "get": {
                      "description": "Returns a list of text products",
                      "operationId": "products_query",
                      "parameters": [
                          {
                              "name": "location",
                              "in": "query",
                              "description": "Location id",
                              "style": "form",
                              "explode": false,
                              "schema": {
                                  "type": "array",
                                  "items": {
                                      "type": "string"
                                  }
                              }
                          },
                          {
                              "name": "start",
                              "in": "query",
                              "description": "Start time",
                              "schema": {
                                  "type": "string",
                                  "format": "date-time"
                              }
                          },
                          {
                              "name": "end",
                              "in": "query",
                              "description": "End time",
                              "schema": {
                                  "type": "string",
                                  "format": "date-time"
                              }
                          },
                          {
                              "name": "office",
                              "in": "query",
                              "description": "Issuing office",
                              "style": "form",
                              "explode": false,
                              "schema": {
                                  "type": "array",
                                  "items": {
                                      "pattern": "^[A-Z]{4}$",
                                      "type": "string"
                                  }
                              }
                          },
                          {
                              "name": "wmoid",
                              "in": "query",
                              "description": "WMO id code",
                              "style": "form",
                              "explode": false,
                              "schema": {
                                  "type": "array",
                                  "items": {
                                      "pattern": "^[A-Z]{4}\\d{2}$",
                                      "type": "string"
                                  }
                              }
                          },
                          {
                              "name": "type",
                              "in": "query",
                              "description": "Product code",
                              "style": "form",
                              "explode": false,
                              "schema": {
                                  "type": "array",
                                  "items": {
                                      "pattern": "^\\w{3}$",
                                      "type": "string"
                                  }
                              }
                          },
                          {
                              "name": "limit",
                              "in": "query",
                              "description": "Limit",
                              "schema": {
                                  "maximum": 500,
                                  "minimum": 1,
                                  "type": "integer"
                              }
                          }
                      ],
                      "responses": {
                          "200": {
                              "description": "success",
                              "headers": {
                                  "X-Correlation-Id": {
                                      "$ref": "#\/components\/headers\/CorrelationId"
                                  },
                                  "X-Request-Id": {
                                      "$ref": "#\/components\/headers\/RequestId"
                                  },
                                  "X-Server-Id": {
                                      "$ref": "#\/components\/headers\/ServerId"
                                  }
                              },
                              "content": {
                                  "application\/ld+json": {
                                      "schema": {
                                          "$ref": "#\/components\/schemas\/TextProductCollection"
                                      }
                                  }
                              }
                          },
                          "default": {
                              "$ref": "#\/components\/responses\/Error"
                          }
                      }
                  }
              },
              "\/products\/locations": {
                  "get": {
                      "description": "Returns a list of valid text product issuance locations",
                      "operationId": "product_locations",
                      "responses": {
                          "200": {
                              "description": "success",
                              "headers": {
                                  "X-Correlation-Id": {
                                      "$ref": "#\/components\/headers\/CorrelationId"
                                  },
                                  "X-Request-Id": {
                                      "$ref": "#\/components\/headers\/RequestId"
                                  },
                                  "X-Server-Id": {
                                      "$ref": "#\/components\/headers\/ServerId"
                                  }
                              },
                              "content": {
                                  "application\/ld+json": {
                                      "schema": {
                                          "$ref": "#\/components\/schemas\/TextProductLocationCollection"
                                      }
                                  }
                              }
                          },
                          "default": {
                              "$ref": "#\/components\/responses\/Error"
                          }
                      },
                      "parameters": []
                  }
              },
              "\/products\/types": {
                  "get": {
                      "description": "Returns a list of valid text product types and codes",
                      "operationId": "product_types",
                      "responses": {
                          "200": {
                              "description": "success",
                              "headers": {
                                  "X-Correlation-Id": {
                                      "$ref": "#\/components\/headers\/CorrelationId"
                                  },
                                  "X-Request-Id": {
                                      "$ref": "#\/components\/headers\/RequestId"
                                  },
                                  "X-Server-Id": {
                                      "$ref": "#\/components\/headers\/ServerId"
                                  }
                              },
                              "content": {
                                  "application\/ld+json": {
                                      "schema": {
                                          "$ref": "#\/components\/schemas\/TextProductTypeCollection"
                                      }
                                  }
                              }
                          },
                          "default": {
                              "$ref": "#\/components\/responses\/Error"
                          }
                      },
                      "parameters": []
                  }
              },
              "\/products\/{productId}": {
                  "get": {
                      "description": "Returns a specific text product",
                      "operationId": "product",
                      "responses": {
                          "200": {
                              "description": "success",
                              "headers": {
                                  "X-Correlation-Id": {
                                      "$ref": "#\/components\/headers\/CorrelationId"
                                  },
                                  "X-Request-Id": {
                                      "$ref": "#\/components\/headers\/RequestId"
                                  },
                                  "X-Server-Id": {
                                      "$ref": "#\/components\/headers\/ServerId"
                                  }
                              },
                              "content": {
                                  "application\/ld+json": {
                                      "schema": {
                                          "$ref": "#\/components\/schemas\/TextProduct"
                                      }
                                  }
                              }
                          },
                          "default": {
                              "$ref": "#\/components\/responses\/Error"
                          }
                      },
                      "parameters": []
                  },
                  "parameters": [
                      {
                          "name": "productId",
                          "in": "path",
                          "description": ".",
                          "required": true,
                          "schema": {
                              "type": "string"
                          }
                      }
                  ]
              },
              "\/products\/types\/{typeId}": {
                  "get": {
                      "description": "Returns a list of text products of a given type",
                      "operationId": "products_type",
                      "responses": {
                          "200": {
                              "description": "success",
                              "headers": {
                                  "X-Correlation-Id": {
                                      "$ref": "#\/components\/headers\/CorrelationId"
                                  },
                                  "X-Request-Id": {
                                      "$ref": "#\/components\/headers\/RequestId"
                                  },
                                  "X-Server-Id": {
                                      "$ref": "#\/components\/headers\/ServerId"
                                  }
                              },
                              "content": {
                                  "application\/ld+json": {
                                      "schema": {
                                          "$ref": "#\/components\/schemas\/TextProductCollection"
                                      }
                                  }
                              }
                          },
                          "default": {
                              "$ref": "#\/components\/responses\/Error"
                          }
                      },
                      "parameters": []
                  },
                  "parameters": [
                      {
                          "name": "typeId",
                          "in": "path",
                          "description": ".",
                          "required": true,
                          "schema": {
                              "type": "string"
                          }
                      }
                  ]
              },
              "\/products\/types\/{typeId}\/locations": {
                  "get": {
                      "description": "Returns a list of valid text product issuance locations for a given product type",
                      "operationId": "products_type_locations",
                      "responses": {
                          "200": {
                              "description": "success",
                              "headers": {
                                  "X-Correlation-Id": {
                                      "$ref": "#\/components\/headers\/CorrelationId"
                                  },
                                  "X-Request-Id": {
                                      "$ref": "#\/components\/headers\/RequestId"
                                  },
                                  "X-Server-Id": {
                                      "$ref": "#\/components\/headers\/ServerId"
                                  }
                              },
                              "content": {
                                  "application\/ld+json": {
                                      "schema": {
                                          "$ref": "#\/components\/schemas\/TextProductLocationCollection"
                                      }
                                  }
                              }
                          },
                          "default": {
                              "$ref": "#\/components\/responses\/Error"
                          }
                      },
                      "parameters": []
                  },
                  "parameters": [
                      {
                          "name": "typeId",
                          "in": "path",
                          "description": ".",
                          "required": true,
                          "schema": {
                              "type": "string"
                          }
                      }
                  ]
              },
              "\/products\/locations\/{locationId}\/types": {
                  "get": {
                      "description": "Returns a list of valid text product types for a given issuance location",
                      "operationId": "location_products",
                      "responses": {
                          "200": {
                              "description": "success",
                              "headers": {
                                  "X-Correlation-Id": {
                                      "$ref": "#\/components\/headers\/CorrelationId"
                                  },
                                  "X-Request-Id": {
                                      "$ref": "#\/components\/headers\/RequestId"
                                  },
                                  "X-Server-Id": {
                                      "$ref": "#\/components\/headers\/ServerId"
                                  }
                              },
                              "content": {
                                  "application\/ld+json": {
                                      "schema": {
                                          "$ref": "#\/components\/schemas\/TextProductTypeCollection"
                                      }
                                  }
                              }
                          },
                          "default": {
                              "$ref": "#\/components\/responses\/Error"
                          }
                      },
                      "parameters": []
                  },
                  "parameters": [
                      {
                          "name": "locationId",
                          "in": "path",
                          "description": ".",
                          "required": true,
                          "schema": {
                              "type": "string"
                          }
                      }
                  ]
              },
              "\/products\/types\/{typeId}\/locations\/{locationId}": {
                  "get": {
                      "description": "Returns a list of text products of a given type for a given issuance location",
                      "operationId": "products_type_location",
                      "responses": {
                          "200": {
                              "description": "success",
                              "headers": {
                                  "X-Correlation-Id": {
                                      "$ref": "#\/components\/headers\/CorrelationId"
                                  },
                                  "X-Request-Id": {
                                      "$ref": "#\/components\/headers\/RequestId"
                                  },
                                  "X-Server-Id": {
                                      "$ref": "#\/components\/headers\/ServerId"
                                  }
                              },
                              "content": {
                                  "application\/ld+json": {
                                      "schema": {
                                          "$ref": "#\/components\/schemas\/TextProductCollection"
                                      }
                                  }
                              }
                          },
                          "default": {
                              "$ref": "#\/components\/responses\/Error"
                          }
                      },
                      "parameters": []
                  },
                  "parameters": [
                      {
                          "name": "typeId",
                          "in": "path",
                          "description": ".",
                          "required": true,
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "locationId",
                          "in": "path",
                          "description": ".",
                          "required": true,
                          "schema": {
                              "type": "string"
                          }
                      }
                  ]
              },
              "\/zones": {
                  "get": {
                      "description": "Returns a list of zones",
                      "operationId": "zone_list",
                      "parameters": [
                          {
                              "name": "id",
                              "in": "query",
                              "description": "Zone ID (forecast or county)",
                              "style": "form",
                              "explode": false,
                              "schema": {
                                  "type": "array",
                                  "items": {
                                      "$ref": "#\/components\/schemas\/NWSZoneID"
                                  }
                              }
                          },
                          {
                              "name": "area",
                              "in": "query",
                              "description": "State\/marine area code",
                              "style": "form",
                              "explode": false,
                              "schema": {
                                  "type": "array",
                                  "items": {
                                      "$ref": "#\/components\/schemas\/AreaCode"
                                  }
                              }
                          },
                          {
                              "name": "region",
                              "in": "query",
                              "description": "Region code",
                              "style": "form",
                              "explode": false,
                              "schema": {
                                  "type": "array",
                                  "items": {
                                      "$ref": "#\/components\/schemas\/RegionCode"
                                  }
                              }
                          },
                          {
                              "name": "type",
                              "in": "query",
                              "description": "Zone type",
                              "style": "form",
                              "explode": false,
                              "schema": {
                                  "type": "array",
                                  "items": {
                                      "enum": [
                                          "land",
                                          "marine",
                                          "forecast",
                                          "public",
                                          "coastal",
                                          "offshore",
                                          "fire",
                                          "county"
                                      ],
                                      "type": "string"
                                  }
                              }
                          },
                          {
                              "name": "point",
                              "in": "query",
                              "description": "Point (latitude,longitude)",
                              "schema": {
                                  "$ref": "#\/components\/schemas\/PointString"
                              }
                          },
                          {
                              "name": "include_geometry",
                              "in": "query",
                              "description": "Include geometry in results (true\/false)",
                              "schema": {
                                  "type": "boolean"
                              }
                          },
                          {
                              "name": "limit",
                              "in": "query",
                              "description": "Limit",
                              "schema": {
                                  "minimum": 1,
                                  "type": "integer"
                              }
                          },
                          {
                              "name": "effective",
                              "in": "query",
                              "description": "Effective date\/time",
                              "schema": {
                                  "type": "string",
                                  "format": "date-time"
                              }
                          }
                      ],
                      "responses": {
                          "200": {
                              "description": "success",
                              "headers": {
                                  "X-Correlation-Id": {
                                      "$ref": "#\/components\/headers\/CorrelationId"
                                  },
                                  "X-Request-Id": {
                                      "$ref": "#\/components\/headers\/RequestId"
                                  },
                                  "X-Server-Id": {
                                      "$ref": "#\/components\/headers\/ServerId"
                                  }
                              },
                              "content": {
                                  "application\/geo+json": {
                                      "schema": {
                                          "$ref": "#\/components\/schemas\/ZoneCollectionGeoJson"
                                      }
                                  },
                                  "application\/ld+json": {
                                      "schema": {
                                          "$ref": "#\/components\/schemas\/ZoneCollectionJsonLd"
                                      }
                                  }
                              }
                          },
                          "default": {
                              "$ref": "#\/components\/responses\/Error"
                          }
                      }
                  }
              },
              "\/zones\/{type}": {
                  "get": {
                      "description": "Returns a list of zones of a given type",
                      "operationId": "zone_list_type",
                      "parameters": [
                          {
                              "name": "id",
                              "in": "query",
                              "description": "Zone ID (forecast or county)",
                              "style": "form",
                              "explode": false,
                              "schema": {
                                  "type": "array",
                                  "items": {
                                      "$ref": "#\/components\/schemas\/NWSZoneID"
                                  }
                              }
                          },
                          {
                              "name": "area",
                              "in": "query",
                              "description": "State\/marine area code",
                              "style": "form",
                              "explode": false,
                              "schema": {
                                  "type": "array",
                                  "items": {
                                      "$ref": "#\/components\/schemas\/AreaCode"
                                  }
                              }
                          },
                          {
                              "name": "region",
                              "in": "query",
                              "description": "Region code",
                              "style": "form",
                              "explode": false,
                              "schema": {
                                  "type": "array",
                                  "items": {
                                      "$ref": "#\/components\/schemas\/RegionCode"
                                  }
                              }
                          },
                          {
                              "name": "type",
                              "in": "query",
                              "description": "Zone type",
                              "style": "form",
                              "explode": false,
                              "schema": {
                                  "type": "array",
                                  "items": {
                                      "enum": [
                                          "land",
                                          "marine",
                                          "forecast",
                                          "public",
                                          "coastal",
                                          "offshore",
                                          "fire",
                                          "county"
                                      ],
                                      "type": "string"
                                  }
                              }
                          },
                          {
                              "name": "point",
                              "in": "query",
                              "description": "Point (latitude,longitude)",
                              "schema": {
                                  "$ref": "#\/components\/schemas\/PointString"
                              }
                          },
                          {
                              "name": "include_geometry",
                              "in": "query",
                              "description": "Include geometry in results (true\/false)",
                              "schema": {
                                  "type": "boolean"
                              }
                          },
                          {
                              "name": "limit",
                              "in": "query",
                              "description": "Limit",
                              "schema": {
                                  "minimum": 1,
                                  "type": "integer"
                              }
                          },
                          {
                              "name": "effective",
                              "in": "query",
                              "description": "Effective date\/time",
                              "schema": {
                                  "type": "string",
                                  "format": "date-time"
                              }
                          }
                      ],
                      "responses": {
                          "200": {
                              "description": "success",
                              "headers": {
                                  "X-Correlation-Id": {
                                      "$ref": "#\/components\/headers\/CorrelationId"
                                  },
                                  "X-Request-Id": {
                                      "$ref": "#\/components\/headers\/RequestId"
                                  },
                                  "X-Server-Id": {
                                      "$ref": "#\/components\/headers\/ServerId"
                                  }
                              },
                              "content": {
                                  "application\/geo+json": {
                                      "schema": {
                                          "$ref": "#\/components\/schemas\/ZoneCollectionGeoJson"
                                      }
                                  },
                                  "application\/ld+json": {
                                      "schema": {
                                          "$ref": "#\/components\/schemas\/ZoneCollectionJsonLd"
                                      }
                                  }
                              }
                          },
                          "default": {
                              "$ref": "#\/components\/responses\/Error"
                          }
                      }
                  },
                  "parameters": [
                      {
                          "name": "type",
                          "in": "path",
                          "description": "Zone type",
                          "required": true,
                          "schema": {
                              "enum": [
                                  "land",
                                  "marine",
                                  "forecast",
                                  "public",
                                  "coastal",
                                  "offshore",
                                  "fire",
                                  "county"
                              ],
                              "type": "string"
                          }
                      }
                  ]
              },
              "\/zones\/{type}\/{zoneId}": {
                  "get": {
                      "description": "Returns metadata about a given zone",
                      "operationId": "zone",
                      "parameters": [
                          {
                              "name": "effective",
                              "in": "query",
                              "description": "Effective date\/time",
                              "schema": {
                                  "type": "string",
                                  "format": "date-time"
                              }
                          }
                      ],
                      "responses": {
                          "200": {
                              "description": "success",
                              "headers": {
                                  "X-Correlation-Id": {
                                      "$ref": "#\/components\/headers\/CorrelationId"
                                  },
                                  "X-Request-Id": {
                                      "$ref": "#\/components\/headers\/RequestId"
                                  },
                                  "X-Server-Id": {
                                      "$ref": "#\/components\/headers\/ServerId"
                                  }
                              },
                              "content": {
                                  "application\/geo+json": {
                                      "schema": {
                                          "$ref": "#\/components\/schemas\/ZoneGeoJson"
                                      }
                                  },
                                  "application\/ld+json": {
                                      "schema": {
                                          "$ref": "#\/components\/schemas\/ZoneJsonLd"
                                      }
                                  }
                              }
                          },
                          "default": {
                              "$ref": "#\/components\/responses\/Error"
                          }
                      }
                  },
                  "parameters": [
                      {
                          "name": "type",
                          "in": "path",
                          "description": "Zone type",
                          "required": true,
                          "schema": {
                              "enum": [
                                  "forecast",
                                  "county",
                                  "fire"
                              ],
                              "type": "string"
                          }
                      },
                      {
                          "$ref": "#\/components\/parameters\/NWSZoneId"
                      }
                  ]
              },
              "\/zones\/{type}\/{zoneId}\/forecast": {
                  "get": {
                      "description": "Returns the current zone forecast for a given zone",
                      "operationId": "zone_forecast",
                      "responses": {
                          "200": {
                              "description": "success",
                              "headers": {
                                  "X-Correlation-Id": {
                                      "$ref": "#\/components\/headers\/CorrelationId"
                                  },
                                  "X-Request-Id": {
                                      "$ref": "#\/components\/headers\/RequestId"
                                  },
                                  "X-Server-Id": {
                                      "$ref": "#\/components\/headers\/ServerId"
                                  }
                              },
                              "content": {
                                  "application\/geo+json": {
                                      "schema": {
                                          "$ref": "#\/components\/schemas\/ZoneForecastGeoJson"
                                      }
                                  },
                                  "application\/ld+json": {
                                      "schema": {
                                          "$ref": "#\/components\/schemas\/ZoneForecastJsonLd"
                                      }
                                  }
                              }
                          },
                          "default": {
                              "$ref": "#\/components\/responses\/Error"
                          }
                      },
                      "parameters": []
                  },
                  "parameters": [
                      {
                          "name": "type",
                          "in": "path",
                          "description": "Zone type",
                          "required": true,
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "$ref": "#\/components\/parameters\/NWSZoneId"
                      }
                  ]
              },
              "\/zones\/forecast\/{zoneId}\/observations": {
                  "get": {
                      "description": "Returns a list of observations for a given zone",
                      "operationId": "zone_obs",
                      "parameters": [
                          {
                              "name": "start",
                              "in": "query",
                              "description": "Start date\/time",
                              "schema": {
                                  "type": "string",
                                  "format": "date-time"
                              }
                          },
                          {
                              "name": "end",
                              "in": "query",
                              "description": "End date\/time",
                              "schema": {
                                  "type": "string",
                                  "format": "date-time"
                              }
                          },
                          {
                              "name": "limit",
                              "in": "query",
                              "description": "Limit",
                              "schema": {
                                  "maximum": 500,
                                  "minimum": 1,
                                  "type": "integer"
                              }
                          }
                      ],
                      "responses": {
                          "200": {
                              "description": "success",
                              "headers": {
                                  "X-Correlation-Id": {
                                      "$ref": "#\/components\/headers\/CorrelationId"
                                  },
                                  "X-Request-Id": {
                                      "$ref": "#\/components\/headers\/RequestId"
                                  },
                                  "X-Server-Id": {
                                      "$ref": "#\/components\/headers\/ServerId"
                                  }
                              },
                              "content": {
                                  "application\/geo+json": {
                                      "schema": {
                                          "$ref": "#\/components\/schemas\/ObservationCollectionGeoJson"
                                      }
                                  },
                                  "application\/ld+json": {
                                      "schema": {
                                          "$ref": "#\/components\/schemas\/ObservationCollectionJsonLd"
                                      }
                                  }
                              }
                          },
                          "default": {
                              "$ref": "#\/components\/responses\/Error"
                          }
                      }
                  },
                  "parameters": [
                      {
                          "$ref": "#\/components\/parameters\/NWSZoneId"
                      }
                  ]
              },
              "\/zones\/forecast\/{zoneId}\/stations": {
                  "get": {
                      "description": "Returns a list of observation stations for a given zone",
                      "operationId": "zone_stations",
                      "responses": {
                          "200": {
                              "$ref": "#\/components\/responses\/ObservationStationCollection"
                          },
                          "default": {
                              "$ref": "#\/components\/responses\/Error"
                          }
                      },
                      "parameters": []
                  },
                  "parameters": [
                      {
                          "$ref": "#\/components\/parameters\/NWSZoneId"
                      }
                  ]
              }
          },
          "components": {
              "schemas": {
                  "Alert": {
                      "type": "object",
                      "properties": {
                          "id": {
                              "$ref": "#\/components\/schemas\/AlertId"
                          },
                          "areaDesc": {
                              "type": "string",
                              "description": "A textual description of the area affected by the alert."
                          },
                          "geocode": {
                              "type": "object",
                              "properties": {
                                  "UGC": {
                                      "type": "array",
                                      "items": {
                                          "$ref": "#\/components\/schemas\/NWSZoneID"
                                      },
                                      "description": "A list of NWS public zone or county identifiers."
                                  },
                                  "SAME": {
                                      "type": "array",
                                      "items": {
                                          "pattern": "^\\d{6}$",
                                          "type": "string"
                                      },
                                      "description": "A list of SAME (Specific Area Message Encoding) codes for affected counties."
                                  }
                              },
                              "description": "Lists of codes for NWS public zones and counties affected by the alert."
                          },
                          "affectedZones": {
                              "type": "array",
                              "items": {
                                  "type": "string",
                                  "format": "uri"
                              },
                              "description": "An array of API links for zones affected by the alert. This is an API-specific extension field and is not part of the CAP specification.\n"
                          },
                          "references": {
                              "type": "array",
                              "items": {
                                  "type": "object",
                                  "properties": {
                                      "@id": {
                                          "type": "string",
                                          "description": "An API link to the prior alert.",
                                          "format": "uri"
                                      },
                                      "identifier": {
                                          "$ref": "#\/components\/schemas\/AlertId"
                                      },
                                      "sender": {
                                          "type": "string",
                                          "description": "The sender of the prior alert."
                                      },
                                      "sent": {
                                          "type": "string",
                                          "description": "The time the prior alert was sent.",
                                          "format": "date-time"
                                      }
                                  }
                              },
                              "description": "A list of prior alerts that this alert updates or replaces."
                          },
                          "sent": {
                              "type": "string",
                              "description": "The time of the origination of the alert message.",
                              "format": "date-time"
                          },
                          "effective": {
                              "type": "string",
                              "description": "The effective time of the information of the alert message.",
                              "format": "date-time"
                          },
                          "onset": {
                              "type": "string",
                              "description": "The expected time of the beginning of the subject event of the alert message.",
                              "format": "date-time",
                              "nullable": true
                          },
                          "expires": {
                              "type": "string",
                              "description": "The expiry time of the information of the alert message.",
                              "format": "date-time"
                          },
                          "ends": {
                              "type": "string",
                              "description": "The expected end time of the subject event of the alert message.",
                              "format": "date-time",
                              "nullable": true
                          },
                          "status": {
                              "$ref": "#\/components\/schemas\/AlertStatus"
                          },
                          "messageType": {
                              "$ref": "#\/components\/schemas\/AlertMessageType"
                          },
                          "category": {
                              "enum": [
                                  "Met",
                                  "Geo",
                                  "Safety",
                                  "Security",
                                  "Rescue",
                                  "Fire",
                                  "Health",
                                  "Env",
                                  "Transport",
                                  "Infra",
                                  "CBRNE",
                                  "Other"
                              ],
                              "type": "string",
                              "description": "The code denoting the category of the subject event of the alert message."
                          },
                          "severity": {
                              "$ref": "#\/components\/schemas\/AlertSeverity"
                          },
                          "certainty": {
                              "$ref": "#\/components\/schemas\/AlertCertainty"
                          },
                          "urgency": {
                              "$ref": "#\/components\/schemas\/AlertUrgency"
                          },
                          "event": {
                              "type": "string",
                              "description": "The text denoting the type of the subject event of the alert message."
                          },
                          "sender": {
                              "type": "string",
                              "description": "Email address of the NWS webmaster."
                          },
                          "senderName": {
                              "type": "string",
                              "description": "The text naming the originator of the alert message."
                          },
                          "headline": {
                              "type": "string",
                              "description": "The text headline of the alert message.",
                              "nullable": true
                          },
                          "description": {
                              "type": "string",
                              "description": "The text describing the subject event of the alert message."
                          },
                          "instruction": {
                              "type": "string",
                              "description": "The text describing the recommended action to be taken by recipients of the alert message.\n",
                              "nullable": true
                          },
                          "response": {
                              "enum": [
                                  "Shelter",
                                  "Evacuate",
                                  "Prepare",
                                  "Execute",
                                  "Avoid",
                                  "Monitor",
                                  "Assess",
                                  "AllClear",
                                  "None"
                              ],
                              "type": "string",
                              "description": "The code denoting the type of action recommended for the target audience.\nThis corresponds to responseType in the CAP specification.\n"
                          },
                          "parameters": {
                              "type": "object",
                              "description": "System-specific additional parameters associated with the alert message.\nThe keys in this object correspond to parameter definitions in the NWS CAP specification.\n",
                              "additionalProperties": {
                                  "type": "array",
                                  "items": []
                              }
                          }
                      },
                      "description": "An object representing a public alert message.\nUnless otherwise noted, the fields in this object correspond to the National Weather Service CAP v1.2 specification, which extends the OASIS Common Alerting Protocol (CAP) v1.2 specification and USA Integrated Public Alert and Warning System (IPAWS) Profile v1.0. Refer to this documentation for more complete information.\nhttp:\/\/docs.oasis-open.org\/emergency\/cap\/v1.2\/CAP-v1.2-os.html http:\/\/docs.oasis-open.org\/emergency\/cap\/v1.2\/ipaws-profile\/v1.0\/cs01\/cap-v1.2-ipaws-profile-cs01.html https:\/\/alerts.weather.gov\/#technical-notes-v12\n"
                  },
                  "AlertCollection": {
                      "type": "object",
                      "properties": {
                          "title": {
                              "type": "string",
                              "description": "A title describing the alert collection"
                          },
                          "updated": {
                              "type": "string",
                              "description": "The last time a change occurred to this collection",
                              "format": "date-time"
                          },
                          "pagination": {
                              "required": [
                                  "next"
                              ],
                              "type": "object",
                              "properties": {
                                  "next": {
                                      "type": "string",
                                      "description": "A link to the next set of alerts",
                                      "format": "uri"
                                  }
                              },
                              "description": "Links for retrieving more data",
                              "additionalProperties": false
                          }
                      }
                  },
                  "AlertCollectionGeoJson": {
                      "allOf": [
                          {
                              "$ref": "#\/components\/schemas\/GeoJsonFeatureCollection"
                          },
                          {
                              "type": "object",
                              "properties": {
                                  "features": {
                                      "type": "array",
                                      "items": {
                                          "type": "object",
                                          "properties": {
                                              "properties": {
                                                  "$ref": "#\/components\/schemas\/Alert"
                                              }
                                          }
                                      }
                                  }
                              }
                          },
                          {
                              "$ref": "#\/components\/schemas\/AlertCollection"
                          }
                      ]
                  },
                  "AlertCollectionJsonLd": {
                      "allOf": [
                          {
                              "$ref": "#\/components\/schemas\/AlertCollection"
                          },
                          {
                              "type": "object",
                              "properties": {
                                  "@context": {
                                      "$ref": "#\/components\/schemas\/JsonLdContext"
                                  },
                                  "@graph": {
                                      "type": "array",
                                      "items": {
                                          "$ref": "#\/components\/schemas\/Alert"
                                      }
                                  }
                              }
                          }
                      ]
                  },
                  "AlertCap": {
                      "type": "object"
                  },
                  "AlertGeoJson": {
                      "allOf": [
                          {
                              "$ref": "#\/components\/schemas\/GeoJsonFeature"
                          },
                          {
                              "type": "object",
                              "properties": {
                                  "properties": {
                                      "$ref": "#\/components\/schemas\/Alert"
                                  }
                              }
                          }
                      ]
                  },
                  "AlertJsonLd": {
                      "type": "object",
                      "properties": {
                          "@graph": {
                              "type": "array",
                              "items": {
                                  "$ref": "#\/components\/schemas\/Alert"
                              }
                          }
                      }
                  },
                  "AlertId": {
                      "type": "string",
                      "description": "The identifier of the alert message."
                  },
                  "AlertCertainty": {
                      "enum": [
                          "Observed",
                          "Likely",
                          "Possible",
                          "Unlikely",
                          "Unknown"
                      ],
                      "type": "string"
                  },
                  "AlertMessageType": {
                      "enum": [
                          "Alert",
                          "Update",
                          "Cancel",
                          "Ack",
                          "Error"
                      ],
                      "type": "string"
                  },
                  "AlertSeverity": {
                      "enum": [
                          "Extreme",
                          "Severe",
                          "Moderate",
                          "Minor",
                          "Unknown"
                      ],
                      "type": "string"
                  },
                  "AlertStatus": {
                      "enum": [
                          "Actual",
                          "Exercise",
                          "System",
                          "Test",
                          "Draft"
                      ],
                      "type": "string"
                  },
                  "AlertUrgency": {
                      "enum": [
                          "Immediate",
                          "Expected",
                          "Future",
                          "Past",
                          "Unknown"
                      ],
                      "type": "string"
                  },
                  "AlertAtomEntry": {
                      "type": "object",
                      "properties": {
                          "id": {
                              "type": "string",
                              "xml": {
                                  "namespace": "http:\/\/www.w3.org\/2005\/Atom"
                              }
                          },
                          "updated": {
                              "type": "string",
                              "xml": {
                                  "namespace": "http:\/\/www.w3.org\/2005\/Atom"
                              }
                          },
                          "published": {
                              "type": "string",
                              "xml": {
                                  "namespace": "http:\/\/www.w3.org\/2005\/Atom"
                              }
                          },
                          "author": {
                              "type": "object",
                              "properties": {
                                  "name": {
                                      "type": "string"
                                  }
                              },
                              "xml": {
                                  "namespace": "http:\/\/www.w3.org\/2005\/Atom"
                              }
                          },
                          "summary": {
                              "type": "string",
                              "xml": {
                                  "namespace": "http:\/\/www.w3.org\/2005\/Atom"
                              }
                          },
                          "event": {
                              "type": "string",
                              "xml": {
                                  "namespace": "urn:oasis:names:tc:emergency:cap:1.2"
                              }
                          },
                          "sent": {
                              "type": "string",
                              "xml": {
                                  "namespace": "urn:oasis:names:tc:emergency:cap:1.2"
                              }
                          },
                          "effective": {
                              "type": "string",
                              "xml": {
                                  "namespace": "urn:oasis:names:tc:emergency:cap:1.2"
                              }
                          },
                          "expires": {
                              "type": "string",
                              "xml": {
                                  "namespace": "urn:oasis:names:tc:emergency:cap:1.2"
                              }
                          },
                          "status": {
                              "type": "string",
                              "xml": {
                                  "namespace": "urn:oasis:names:tc:emergency:cap:1.2"
                              }
                          },
                          "msgType": {
                              "type": "string",
                              "xml": {
                                  "namespace": "urn:oasis:names:tc:emergency:cap:1.2"
                              }
                          },
                          "category": {
                              "type": "string",
                              "xml": {
                                  "namespace": "urn:oasis:names:tc:emergency:cap:1.2"
                              }
                          },
                          "urgency": {
                              "type": "string",
                              "xml": {
                                  "namespace": "urn:oasis:names:tc:emergency:cap:1.2"
                              }
                          },
                          "severity": {
                              "type": "string",
                              "xml": {
                                  "namespace": "urn:oasis:names:tc:emergency:cap:1.2"
                              }
                          },
                          "certainty": {
                              "type": "string",
                              "xml": {
                                  "namespace": "urn:oasis:names:tc:emergency:cap:1.2"
                              }
                          },
                          "areaDesc": {
                              "type": "string",
                              "xml": {
                                  "namespace": "urn:oasis:names:tc:emergency:cap:1.2"
                              }
                          },
                          "polygon": {
                              "type": "string",
                              "xml": {
                                  "namespace": "urn:oasis:names:tc:emergency:cap:1.2"
                              }
                          },
                          "geocode": {
                              "type": "array",
                              "items": {
                                  "$ref": "#\/components\/schemas\/AlertXMLParameter"
                              },
                              "xml": {
                                  "namespace": "urn:oasis:names:tc:emergency:cap:1.2"
                              }
                          },
                          "parameter": {
                              "type": "array",
                              "items": {
                                  "$ref": "#\/components\/schemas\/AlertXMLParameter"
                              },
                              "xml": {
                                  "namespace": "urn:oasis:names:tc:emergency:cap:1.2"
                              }
                          }
                      },
                      "description": "An alert entry in an Atom feed",
                      "xml": {
                          "name": "entry",
                          "namespace": "http:\/\/www.w3.org\/2005\/Atom"
                      }
                  },
                  "AlertXMLParameter": {
                      "type": "object",
                      "properties": {
                          "valueName": {
                              "type": "string"
                          },
                          "value": {
                              "type": "string"
                          }
                      }
                  },
                  "AlertAtomFeed": {
                      "type": "object",
                      "properties": {
                          "id": {
                              "type": "string",
                              "xml": {
                                  "namespace": "http:\/\/www.w3.org\/2005\/Atom"
                              }
                          },
                          "generator": {
                              "type": "string",
                              "xml": {
                                  "namespace": "http:\/\/www.w3.org\/2005\/Atom"
                              }
                          },
                          "updated": {
                              "type": "string",
                              "xml": {
                                  "namespace": "http:\/\/www.w3.org\/2005\/Atom"
                              }
                          },
                          "author": {
                              "type": "object",
                              "properties": {
                                  "name": {
                                      "type": "string",
                                      "xml": {
                                          "namespace": "http:\/\/www.w3.org\/2005\/Atom"
                                      }
                                  }
                              },
                              "xml": {
                                  "namespace": "http:\/\/www.w3.org\/2005\/Atom"
                              }
                          },
                          "title": {
                              "type": "string",
                              "xml": {
                                  "namespace": "http:\/\/www.w3.org\/2005\/Atom"
                              }
                          },
                          "entry": {
                              "type": "array",
                              "items": {
                                  "$ref": "#\/components\/schemas\/AlertAtomEntry"
                              },
                              "xml": {
                                  "namespace": "http:\/\/www.w3.org\/2005\/Atom"
                              }
                          }
                      },
                      "description": "An alert feed in Atom format",
                      "xml": {
                          "name": "feed",
                          "namespace": "http:\/\/www.w3.org\/2005\/Atom"
                      }
                  },
                  "AreaCode": {
                      "oneOf": [
                          {
                              "$ref": "#\/components\/schemas\/StateTerritoryCode"
                          },
                          {
                              "$ref": "#\/components\/schemas\/MarineAreaCode"
                          }
                      ],
                      "description": "State\/territory codes and marine area codes"
                  },
                  "BinaryFile": {
                      "type": "string",
                      "format": "binary"
                  },
                  "GeometryString": {
                      "type": "string",
                      "description": "A geometry represented in Well-Known Text (WKT) format.",
                      "format": "wkt",
                      "nullable": true
                  },
                  "GeoJsonBoundingBox": {
                      "minItems": 4,
                      "type": "array",
                      "items": {
                          "type": "number"
                      },
                      "description": "A GeoJSON bounding box. Please refer to IETF RFC 7946 for information on the GeoJSON format."
                  },
                  "GeoJsonCoordinate": {
                      "minItems": 2,
                      "type": "array",
                      "items": {
                          "type": "number"
                      },
                      "description": "A GeoJSON coordinate. Please refer to IETF RFC 7946 for information on the GeoJSON format."
                  },
                  "GeoJsonGeometry": {
                      "oneOf": [
                          {
                              "title": "GeoJSON Point",
                              "required": [
                                  "type",
                                  "coordinates"
                              ],
                              "type": "object",
                              "properties": {
                                  "type": {
                                      "enum": [
                                          "Point"
                                      ],
                                      "type": "string"
                                  },
                                  "coordinates": {
                                      "$ref": "#\/components\/schemas\/GeoJsonCoordinate"
                                  },
                                  "bbox": {
                                      "$ref": "#\/components\/schemas\/GeoJsonBoundingBox"
                                  }
                              }
                          },
                          {
                              "title": "GeoJSON LineString",
                              "required": [
                                  "type",
                                  "coordinates"
                              ],
                              "type": "object",
                              "properties": {
                                  "type": {
                                      "enum": [
                                          "LineString"
                                      ],
                                      "type": "string"
                                  },
                                  "coordinates": {
                                      "$ref": "#\/components\/schemas\/GeoJsonLineString"
                                  },
                                  "bbox": {
                                      "$ref": "#\/components\/schemas\/GeoJsonBoundingBox"
                                  }
                              }
                          },
                          {
                              "title": "GeoJSON Polygon",
                              "required": [
                                  "type",
                                  "coordinates"
                              ],
                              "type": "object",
                              "properties": {
                                  "type": {
                                      "enum": [
                                          "Polygon"
                                      ],
                                      "type": "string"
                                  },
                                  "coordinates": {
                                      "$ref": "#\/components\/schemas\/GeoJsonPolygon"
                                  },
                                  "bbox": {
                                      "$ref": "#\/components\/schemas\/GeoJsonBoundingBox"
                                  }
                              }
                          },
                          {
                              "title": "GeoJSON MultiPoint",
                              "required": [
                                  "type",
                                  "coordinates"
                              ],
                              "type": "object",
                              "properties": {
                                  "type": {
                                      "enum": [
                                          "MultiPoint"
                                      ],
                                      "type": "string"
                                  },
                                  "coordinates": {
                                      "type": "array",
                                      "items": {
                                          "$ref": "#\/components\/schemas\/GeoJsonCoordinate"
                                      }
                                  },
                                  "bbox": {
                                      "$ref": "#\/components\/schemas\/GeoJsonBoundingBox"
                                  }
                              }
                          },
                          {
                              "title": "GeoJSON MultiLineString",
                              "required": [
                                  "type",
                                  "coordinates"
                              ],
                              "type": "object",
                              "properties": {
                                  "type": {
                                      "enum": [
                                          "MultiLineString"
                                      ],
                                      "type": "string"
                                  },
                                  "coordinates": {
                                      "type": "array",
                                      "items": {
                                          "$ref": "#\/components\/schemas\/GeoJsonLineString"
                                      }
                                  },
                                  "bbox": {
                                      "$ref": "#\/components\/schemas\/GeoJsonBoundingBox"
                                  }
                              }
                          },
                          {
                              "title": "GeoJSON MultiPolygon",
                              "required": [
                                  "type",
                                  "coordinates"
                              ],
                              "type": "object",
                              "properties": {
                                  "type": {
                                      "enum": [
                                          "MultiPolygon"
                                      ],
                                      "type": "string"
                                  },
                                  "coordinates": {
                                      "type": "array",
                                      "items": {
                                          "$ref": "#\/components\/schemas\/GeoJsonPolygon"
                                      }
                                  },
                                  "bbox": {
                                      "$ref": "#\/components\/schemas\/GeoJsonBoundingBox"
                                  }
                              }
                          }
                      ],
                      "description": "A GeoJSON geometry object. Please refer to IETF RFC 7946 for information on the GeoJSON format.",
                      "nullable": true
                  },
                  "GeoJsonFeature": {
                      "required": [
                          "type",
                          "geometry",
                          "properties"
                      ],
                      "type": "object",
                      "properties": {
                          "@context": {
                              "$ref": "#\/components\/schemas\/JsonLdContext"
                          },
                          "id": {
                              "type": "string",
                              "format": "uri"
                          },
                          "type": {
                              "enum": [
                                  "Feature"
                              ],
                              "type": "string"
                          },
                          "geometry": {
                              "$ref": "#\/components\/schemas\/GeoJsonGeometry"
                          },
                          "properties": {
                              "type": "object"
                          }
                      },
                      "description": "A GeoJSON feature. Please refer to IETF RFC 7946 for information on the GeoJSON format.",
                      "additionalProperties": false
                  },
                  "GeoJsonFeatureCollection": {
                      "required": [
                          "type",
                          "features"
                      ],
                      "type": "object",
                      "properties": {
                          "@context": {
                              "$ref": "#\/components\/schemas\/JsonLdContext"
                          },
                          "type": {
                              "enum": [
                                  "FeatureCollection"
                              ],
                              "type": "string"
                          },
                          "features": {
                              "type": "array",
                              "items": {
                                  "$ref": "#\/components\/schemas\/GeoJsonFeature"
                              }
                          }
                      },
                      "description": "A GeoJSON feature collection. Please refer to IETF RFC 7946 for information on the GeoJSON format."
                  },
                  "GeoJsonLineString": {
                      "minItems": 2,
                      "type": "array",
                      "items": {
                          "$ref": "#\/components\/schemas\/GeoJsonCoordinate"
                      },
                      "description": "A GeoJSON line string. Please refer to IETF RFC 7946 for information on the GeoJSON format."
                  },
                  "GeoJsonPolygon": {
                      "type": "array",
                      "items": {
                          "minItems": 4,
                          "type": "array",
                          "items": {
                              "$ref": "#\/components\/schemas\/GeoJsonCoordinate"
                          }
                      },
                      "description": "A GeoJSON polygon. Please refer to IETF RFC 7946 for information on the GeoJSON format."
                  },
                  "Gridpoint": {
                      "type": "object",
                      "properties": {
                          "@context": {
                              "$ref": "#\/components\/schemas\/JsonLdContext"
                          },
                          "geometry": {
                              "$ref": "#\/components\/schemas\/GeometryString"
                          },
                          "@id": {
                              "type": "string",
                              "format": "uri"
                          },
                          "@type": {
                              "enum": [
                                  "wx:Gridpoint"
                              ],
                              "type": "string"
                          },
                          "updateTime": {
                              "type": "string",
                              "format": "date-time"
                          },
                          "validTimes": {
                              "$ref": "#\/components\/schemas\/ISO8601Interval"
                          },
                          "elevation": {
                              "$ref": "#\/components\/schemas\/QuantitativeValue"
                          },
                          "forecastOffice": {
                              "type": "string",
                              "format": "uri"
                          },
                          "gridId": {
                              "type": "string"
                          },
                          "gridX": {
                              "minimum": 0,
                              "type": "integer"
                          },
                          "gridY": {
                              "minimum": 0,
                              "type": "integer"
                          },
                          "weather": {
                              "required": [
                                  "values"
                              ],
                              "type": "object",
                              "properties": {
                                  "values": {
                                      "type": "array",
                                      "items": {
                                          "required": [
                                              "validTime",
                                              "value"
                                          ],
                                          "type": "object",
                                          "properties": {
                                              "validTime": {
                                                  "$ref": "#\/components\/schemas\/ISO8601Interval"
                                              },
                                              "value": {
                                                  "type": "array",
                                                  "items": {
                                                      "required": [
                                                          "coverage",
                                                          "weather",
                                                          "intensity",
                                                          "visibility",
                                                          "attributes"
                                                      ],
                                                      "type": "object",
                                                      "properties": {
                                                          "coverage": {
                                                              "enum": [
                                                                  "areas",
                                                                  "brief",
                                                                  "chance",
                                                                  "definite",
                                                                  "few",
                                                                  "frequent",
                                                                  "intermittent",
                                                                  "isolated",
                                                                  "likely",
                                                                  "numerous",
                                                                  "occasional",
                                                                  "patchy",
                                                                  "periods",
                                                                  "scattered",
                                                                  "slight_chance",
                                                                  "widespread"
                                                              ],
                                                              "type": "string",
                                                              "nullable": true
                                                          },
                                                          "weather": {
                                                              "enum": [
                                                                  "blowing_dust",
                                                                  "blowing_sand",
                                                                  "blowing_snow",
                                                                  "drizzle",
                                                                  "fog",
                                                                  "freezing_fog",
                                                                  "freezing_drizzle",
                                                                  "freezing_rain",
                                                                  "freezing_spray",
                                                                  "frost",
                                                                  "hail",
                                                                  "haze",
                                                                  "ice_crystals",
                                                                  "ice_fog",
                                                                  "rain",
                                                                  "rain_showers",
                                                                  "sleet",
                                                                  "smoke",
                                                                  "snow",
                                                                  "snow_showers",
                                                                  "thunderstorms",
                                                                  "volcanic_ash",
                                                                  "water_spouts"
                                                              ],
                                                              "type": "string",
                                                              "nullable": true
                                                          },
                                                          "intensity": {
                                                              "enum": [
                                                                  "very_light",
                                                                  "light",
                                                                  "moderate",
                                                                  "heavy"
                                                              ],
                                                              "type": "string",
                                                              "nullable": true
                                                          },
                                                          "visibility": {
                                                              "$ref": "#\/components\/schemas\/QuantitativeValue"
                                                          },
                                                          "attributes": {
                                                              "type": "array",
                                                              "items": {
                                                                  "enum": [
                                                                      "damaging_wind",
                                                                      "dry_thunderstorms",
                                                                      "flooding",
                                                                      "gusty_wind",
                                                                      "heavy_rain",
                                                                      "large_hail",
                                                                      "small_hail",
                                                                      "tornadoes"
                                                                  ],
                                                                  "type": "string"
                                                              }
                                                          }
                                                      },
                                                      "description": "A value object representing expected weather phenomena.",
                                                      "additionalProperties": false
                                                  }
                                              }
                                          },
                                          "additionalProperties": false
                                      }
                                  }
                              }
                          },
                          "hazards": {
                              "required": [
                                  "values"
                              ],
                              "type": "object",
                              "properties": {
                                  "values": {
                                      "type": "array",
                                      "items": {
                                          "required": [
                                              "validTime",
                                              "value"
                                          ],
                                          "type": "object",
                                          "properties": {
                                              "validTime": {
                                                  "$ref": "#\/components\/schemas\/ISO8601Interval"
                                              },
                                              "value": {
                                                  "type": "array",
                                                  "items": {
                                                      "required": [
                                                          "phenomenon",
                                                          "significance",
                                                          "event_number"
                                                      ],
                                                      "type": "object",
                                                      "properties": {
                                                          "phenomenon": {
                                                              "pattern": "^\\w{2}$",
                                                              "type": "string",
                                                              "description": "Hazard code. This value will correspond to a P-VTEC phenomenon code as defined in NWS Directive 10-1703.\n"
                                                          },
                                                          "significance": {
                                                              "pattern": "^\\w$",
                                                              "type": "string",
                                                              "description": "Significance code. This value will correspond to a P-VTEC significance code as defined in NWS Directive 10-1703.\nThis will most frequently be \"A\" for a watch or \"Y\" for an advisory.\n"
                                                          },
                                                          "event_number": {
                                                              "type": "integer",
                                                              "description": "Event number. If this hazard refers to a national or regional center product (such as a Storm Prediction Center convective watch), this value will be the sequence number of that product.\n",
                                                              "nullable": true
                                                          }
                                                      },
                                                      "description": "A value object representing an expected hazard."
                                                  }
                                              }
                                          },
                                          "additionalProperties": false
                                      }
                                  }
                              }
                          }
                      },
                      "description": "Raw forecast data for a 2.5km grid square.\nThis is a list of all potential data layers that may appear. Some layers may not be present in all areas.\n* temperature\n* dewpoint\n* maxTemperature\n* minTemperature\n* relativeHumidity\n* apparentTemperature\n* heatIndex\n* windChill\n* skyCover\n* windDirection\n* windSpeed\n* windGust\n* weather\n* hazards: Watch and advisory products in effect\n* probabilityOfPrecipitation\n* quantitativePrecipitation\n* iceAccumulation\n* snowfallAmount\n* snowLevel\n* ceilingHeight\n* visibility\n* transportWindSpeed\n* transportWindDirection\n* mixingHeight\n* hainesIndex\n* lightningActivityLevel\n* twentyFootWindSpeed\n* twentyFootWindDirection\n* waveHeight\n* wavePeriod\n* waveDirection\n* primarySwellHeight\n* primarySwellDirection\n* secondarySwellHeight\n* secondarySwellDirection\n* wavePeriod2\n* windWaveHeight\n* dispersionIndex\n* pressure: Barometric pressure\n* probabilityOfTropicalStormWinds\n* probabilityOfHurricaneWinds\n* potentialOf15mphWinds\n* potentialOf25mphWinds\n* potentialOf35mphWinds\n* potentialOf45mphWinds\n* potentialOf20mphWindGusts\n* potentialOf30mphWindGusts\n* potentialOf40mphWindGusts\n* potentialOf50mphWindGusts\n* potentialOf60mphWindGusts\n* grasslandFireDangerIndex\n* probabilityOfThunder\n* davisStabilityIndex\n* atmosphericDispersionIndex\n* lowVisibilityOccurrenceRiskIndex\n* stability\n* redFlagThreatIndex\n",
                      "additionalProperties": {
                          "$ref": "#\/components\/schemas\/GridpointQuantitativeValueLayer"
                      }
                  },
                  "GridpointQuantitativeValueLayer": {
                      "required": [
                          "values"
                      ],
                      "type": "object",
                      "properties": {
                          "uom": {
                              "$ref": "#\/components\/schemas\/UnitOfMeasure"
                          },
                          "values": {
                              "type": "array",
                              "items": {
                                  "required": [
                                      "validTime",
                                      "value"
                                  ],
                                  "type": "object",
                                  "properties": {
                                      "validTime": {
                                          "$ref": "#\/components\/schemas\/ISO8601Interval"
                                      },
                                      "value": {
                                          "type": "number",
                                          "nullable": true
                                      }
                                  },
                                  "additionalProperties": false
                              }
                          }
                      },
                      "description": "A gridpoint layer consisting of quantitative values (numeric values with associated units of measure).\n"
                  },
                  "GridpointGeoJson": {
                      "allOf": [
                          {
                              "$ref": "#\/components\/schemas\/GeoJsonFeature"
                          },
                          {
                              "type": "object",
                              "properties": {
                                  "properties": {
                                      "$ref": "#\/components\/schemas\/Gridpoint"
                                  }
                              }
                          }
                      ]
                  },
                  "GridpointJsonLd": {
                      "$ref": "#\/components\/schemas\/Gridpoint"
                  },
                  "GridpointForecast": {
                      "type": "object",
                      "properties": {
                          "@context": {
                              "$ref": "#\/components\/schemas\/JsonLdContext"
                          },
                          "geometry": {
                              "$ref": "#\/components\/schemas\/GeometryString"
                          },
                          "units": {
                              "$ref": "#\/components\/schemas\/GridpointForecastUnits"
                          },
                          "forecastGenerator": {
                              "type": "string",
                              "description": "The internal generator class used to create the forecast text (used for NWS debugging)."
                          },
                          "generatedAt": {
                              "type": "string",
                              "description": "The time this forecast data was generated.",
                              "format": "date-time"
                          },
                          "updateTime": {
                              "type": "string",
                              "description": "The last update time of the data this forecast was generated from.",
                              "format": "date-time"
                          },
                          "updated": {
                              "type": "string",
                              "description": "This property is deprecated (use updateTime instead).",
                              "format": "date-time",
                              "deprecated": true
                          },
                          "validTimes": {
                              "$ref": "#\/components\/schemas\/ISO8601Interval"
                          },
                          "elevation": {
                              "$ref": "#\/components\/schemas\/QuantitativeValue"
                          },
                          "periods": {
                              "type": "array",
                              "items": {
                                  "$ref": "#\/components\/schemas\/GridpointForecastPeriod"
                              },
                              "description": "An array of forecast periods."
                          }
                      },
                      "description": "A multi-day forecast for a 2.5km grid square.",
                      "additionalProperties": false
                  },
                  "GridpointForecastPeriod": {
                      "type": "object",
                      "properties": {
                          "number": {
                              "minimum": 1,
                              "type": "integer",
                              "description": "Sequential period number."
                          },
                          "name": {
                              "type": "string",
                              "description": "A textual identifier for the period. This value will not be present for hourly forecasts.\n",
                              "example": "Tuesday Night"
                          },
                          "startTime": {
                              "type": "string",
                              "description": "The starting time that this forecast period is valid for.",
                              "format": "date-time"
                          },
                          "endTime": {
                              "type": "string",
                              "description": "The ending time that this forecast period is valid for.",
                              "format": "date-time"
                          },
                          "isDaytime": {
                              "type": "boolean",
                              "description": "Indicates whether this period is daytime or nighttime."
                          },
                          "temperature": {
                              "oneOf": [
                                  {
                                      "$ref": "#\/components\/schemas\/QuantitativeValue"
                                  },
                                  {
                                      "type": "integer"
                                  }
                              ],
                              "description": "High\/low temperature for the period, depending on whether the period is day or night.\nThis property as an integer value is deprecated. Future versions will express this value as a quantitative value object. To make use of the future standard format now, set the \"forecast_temperature_qv\" feature flag on the request.\n"
                          },
                          "temperatureUnit": {
                              "enum": [
                                  "F",
                                  "C"
                              ],
                              "type": "string",
                              "description": "The unit of the temperature value (Fahrenheit or Celsius).\nThis property is deprecated. Future versions will indicate the unit within the quantitative value object for the temperature property. To make use of the future standard format now, set the \"forecast_temperature_qv\" feature flag on the request.\n",
                              "deprecated": true
                          },
                          "temperatureTrend": {
                              "enum": [
                                  "rising",
                                  "falling"
                              ],
                              "type": "string",
                              "description": "If not null, indicates a non-diurnal temperature trend for the period (either rising temperature overnight, or falling temperature during the day)\n",
                              "nullable": true
                          },
                          "windSpeed": {
                              "oneOf": [
                                  {
                                      "$ref": "#\/components\/schemas\/QuantitativeValue"
                                  },
                                  {
                                      "type": "string"
                                  }
                              ],
                              "description": "Wind speed for the period.\nThis property as an string value is deprecated. Future versions will express this value as a quantitative value object. To make use of the future standard format now, set the \"forecast_wind_speed_qv\" feature flag on the request.\n"
                          },
                          "windGust": {
                              "oneOf": [
                                  {
                                      "$ref": "#\/components\/schemas\/QuantitativeValue"
                                  },
                                  {
                                      "type": "string"
                                  }
                              ],
                              "description": "Peak wind gust for the period.\nThis property as an string value is deprecated. Future versions will express this value as a quantitative value object. To make use of the future standard format now, set the \"forecast_wind_speed_qv\" feature flag on the request.\n",
                              "nullable": true
                          },
                          "windDirection": {
                              "enum": [
                                  "N",
                                  "NNE",
                                  "NE",
                                  "ENE",
                                  "E",
                                  "ESE",
                                  "SE",
                                  "SSE",
                                  "S",
                                  "SSW",
                                  "SW",
                                  "WSW",
                                  "W",
                                  "WNW",
                                  "NW",
                                  "NNW"
                              ],
                              "type": "string",
                              "description": "The prevailing direction of the wind for the period, using a 16-point compass."
                          },
                          "icon": {
                              "type": "string",
                              "description": "A link to an icon representing the forecast summary.",
                              "format": "uri",
                              "deprecated": true
                          },
                          "shortForecast": {
                              "type": "string",
                              "description": "A brief textual forecast summary for the period."
                          },
                          "detailedForecast": {
                              "type": "string",
                              "description": "A detailed textual forecast for the period."
                          }
                      },
                      "description": "An object containing forecast information for a specific time period (generally 12-hour or 1-hour).\n",
                      "additionalProperties": false
                  },
                  "GridpointForecastUnits": {
                      "enum": [
                          "us",
                          "si"
                      ],
                      "type": "string",
                      "description": "Denotes the units used in the textual portions of the forecast.",
                      "default": "us"
                  },
                  "GridpointForecastGeoJson": {
                      "allOf": [
                          {
                              "$ref": "#\/components\/schemas\/GeoJsonFeature"
                          },
                          {
                              "type": "object",
                              "properties": {
                                  "properties": {
                                      "$ref": "#\/components\/schemas\/GridpointForecast"
                                  }
                              }
                          }
                      ]
                  },
                  "GridpointForecastJsonLd": {
                      "allOf": [
                          {
                              "$ref": "#\/components\/schemas\/GridpointForecast"
                          },
                          {
                              "required": [
                                  "@context",
                                  "geometry"
                              ],
                              "type": "object",
                              "properties": {
                                  "@context": {
                                      "$ref": "#\/components\/schemas\/JsonLdContext"
                                  },
                                  "geometry": {
                                      "$ref": "#\/components\/schemas\/GeometryString"
                                  }
                              }
                          }
                      ]
                  },
                  "ISO8601Duration": {
                      "pattern": "^P(\\d+Y)?(\\d+M)?(\\d+D)?(T(\\d+H)?(\\d+M)?(\\d+S)?)?$",
                      "type": "string",
                      "description": "A time duration in ISO 8601 format.",
                      "example": "P2DT12H"
                  },
                  "ISO8601Interval": {
                      "oneOf": [
                          {
                              "pattern": "^(\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(Z|[+-]\\d{2}:?\\d{2}?)|NOW)\\\/(\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(Z|[+-]\\d{2}:?\\d{2}?)|NOW)$",
                              "type": "string",
                              "example": "2007-03-01T13:00:00Z\/2008-05-11T15:30:00Z"
                          },
                          {
                              "pattern": "^(\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(Z|[+-]\\d{2}:?\\d{2}?)|NOW)\\\/P(\\d+Y)?(\\d+M)?(\\d+D)?(T(\\d+H)?(\\d+M)?(\\d+S)?)?$",
                              "type": "string",
                              "example": "2007-03-01T13:00:00Z\/P1Y2M10DT2H30M"
                          },
                          {
                              "pattern": "^P(\\d+Y)?(\\d+M)?(\\d+D)?(T(\\d+H)?(\\d+M)?(\\d+S)?)?\\\/(\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(Z|[+-]\\d{2}:?\\d{2}?)|NOW)$",
                              "type": "string",
                              "example": "P1Y2M10DT2H30M\/2008-05-11T15:30:00Z"
                          }
                      ],
                      "description": "A time interval in ISO 8601 format. This can be one of:\n\n    1. Start and end time\n    2. Start time and duration\n    3. Duration and end time\nThe string \"NOW\" can also be used in place of a start\/end time.\n"
                  },
                  "JsonLdContext": {
                      "anyOf": [
                          {
                              "type": "array"
                          },
                          {
                              "type": "object"
                          }
                      ]
                  },
                  "LandRegionCode": {
                      "enum": [
                          "AR",
                          "CR",
                          "ER",
                          "PR",
                          "SR",
                          "WR"
                      ],
                      "type": "string",
                      "description": "Land region code. These correspond to the six NWS regional headquarters:\n* AR: Alaska Region\n* CR: Central Region\n* ER: Eastern Region\n* PR: Pacific Region\n* SR: Southern Region\n* WR: Western Region\n"
                  },
                  "MarineAreaCode": {
                      "enum": [
                          "AM",
                          "AN",
                          "GM",
                          "LC",
                          "LE",
                          "LH",
                          "LM",
                          "LO",
                          "LS",
                          "PH",
                          "PK",
                          "PM",
                          "PS",
                          "PZ",
                          "SL"
                      ],
                      "type": "string",
                      "description": "Marine area code as defined in NWS Directive 10-302:\n* AM: Western North Atlantic Ocean and along U.S. East Coast south of Currituck Beach Light NC following the coastline into Gulf of Mexico to Ocean Reef FL including the Caribbean\n* AN: Western North Atlantic Ocean and along U.S. East Coast from Canadian border south to Currituck Beach Light NC\n* GM: Gulf of Mexico and along the U.S. Gulf Coast from the Mexican border to Ocean Reef FL\n* LC: Lake St. Clair\n* LE: Lake Erie\n* LH: Lake Huron\n* LM: Lake Michigan\n* LO: Lake Ontario\n* LS: Lake Superior\n* PH: Central Pacific Ocean including Hawaiian waters\n* PK: North Pacific Ocean near Alaska and along Alaska coastline including the Bering Sea and the Gulf of Alaska\n* PM: Western Pacific Ocean including Mariana Island waters\n* PS: South Central Pacific Ocean including American Samoa waters\n* PZ: Eastern North Pacific Ocean and along U.S. West Coast from Canadian border to Mexican border\n* SL: St. Lawrence River above St. Regis\n"
                  },
                  "MarineRegionCode": {
                      "enum": [
                          "AL",
                          "AT",
                          "GL",
                          "GM",
                          "PA",
                          "PI"
                      ],
                      "type": "string",
                      "description": "Marine region code. These are groups of marine areas combined.\n* AL: Alaska waters (PK)\n* AT: Atlantic Ocean (AM, AN)\n* GL: Great Lakes (LC, LE, LH, LM, LO, LS, SL)\n* GM: Gulf of Mexico (GM)\n* PA: Eastern Pacific Ocean and U.S. West Coast (PZ)\n* PI: Central and Western Pacific (PH, PM, PS)\n"
                  },
                  "MetarPhenomenon": {
                      "required": [
                          "intensity",
                          "modifier",
                          "weather",
                          "rawString"
                      ],
                      "type": "object",
                      "properties": {
                          "intensity": {
                              "enum": [
                                  "light",
                                  "heavy"
                              ],
                              "type": "string",
                              "nullable": true
                          },
                          "modifier": {
                              "enum": [
                                  "patches",
                                  "blowing",
                                  "low_drifting",
                                  "freezing",
                                  "shallow",
                                  "partial",
                                  "showers"
                              ],
                              "type": "string",
                              "nullable": true
                          },
                          "weather": {
                              "enum": [
                                  "fog_mist",
                                  "dust_storm",
                                  "dust",
                                  "drizzle",
                                  "funnel_cloud",
                                  "fog",
                                  "smoke",
                                  "hail",
                                  "snow_pellets",
                                  "haze",
                                  "ice_crystals",
                                  "ice_pellets",
                                  "dust_whirls",
                                  "spray",
                                  "rain",
                                  "sand",
                                  "snow_grains",
                                  "snow",
                                  "squalls",
                                  "sand_storm",
                                  "thunderstorms",
                                  "unknown",
                                  "volcanic_ash"
                              ],
                              "type": "string"
                          },
                          "rawString": {
                              "type": "string"
                          },
                          "inVicinity": {
                              "type": "boolean"
                          }
                      },
                      "description": "An object representing a decoded METAR phenomenon string.",
                      "additionalProperties": false
                  },
                  "MetarSkyCoverage": {
                      "enum": [
                          "OVC",
                          "BKN",
                          "SCT",
                          "FEW",
                          "SKC",
                          "CLR",
                          "VV"
                      ],
                      "type": "string"
                  },
                  "NWSForecastOfficeId": {
                      "enum": [
                          "AKQ",
                          "ALY",
                          "BGM",
                          "BOX",
                          "BTV",
                          "BUF",
                          "CAE",
                          "CAR",
                          "CHS",
                          "CLE",
                          "CTP",
                          "GSP",
                          "GYX",
                          "ILM",
                          "ILN",
                          "LWX",
                          "MHX",
                          "OKX",
                          "PBZ",
                          "PHI",
                          "RAH",
                          "RLX",
                          "RNK",
                          "ABQ",
                          "AMA",
                          "BMX",
                          "BRO",
                          "CRP",
                          "EPZ",
                          "EWX",
                          "FFC",
                          "FWD",
                          "HGX",
                          "HUN",
                          "JAN",
                          "JAX",
                          "KEY",
                          "LCH",
                          "LIX",
                          "LUB",
                          "LZK",
                          "MAF",
                          "MEG",
                          "MFL",
                          "MLB",
                          "MOB",
                          "MRX",
                          "OHX",
                          "OUN",
                          "SHV",
                          "SJT",
                          "SJU",
                          "TAE",
                          "TBW",
                          "TSA",
                          "ABR",
                          "APX",
                          "ARX",
                          "BIS",
                          "BOU",
                          "CYS",
                          "DDC",
                          "DLH",
                          "DMX",
                          "DTX",
                          "DVN",
                          "EAX",
                          "FGF",
                          "FSD",
                          "GID",
                          "GJT",
                          "GLD",
                          "GRB",
                          "GRR",
                          "ICT",
                          "ILX",
                          "IND",
                          "IWX",
                          "JKL",
                          "LBF",
                          "LMK",
                          "LOT",
                          "LSX",
                          "MKX",
                          "MPX",
                          "MQT",
                          "OAX",
                          "PAH",
                          "PUB",
                          "RIW",
                          "SGF",
                          "TOP",
                          "UNR",
                          "BOI",
                          "BYZ",
                          "EKA",
                          "FGZ",
                          "GGW",
                          "HNX",
                          "LKN",
                          "LOX",
                          "MFR",
                          "MSO",
                          "MTR",
                          "OTX",
                          "PDT",
                          "PIH",
                          "PQR",
                          "PSR",
                          "REV",
                          "SEW",
                          "SGX",
                          "SLC",
                          "STO",
                          "TFX",
                          "TWC",
                          "VEF",
                          "AER",
                          "AFC",
                          "AFG",
                          "AJK",
                          "ALU",
                          "GUM",
                          "HPA",
                          "HFO",
                          "PPG",
                          "STU",
                          "NH1",
                          "NH2",
                          "ONA",
                          "ONP"
                      ],
                      "type": "string",
                      "description": "Three-letter identifier for a NWS office."
                  },
                  "NWSZoneID": {
                      "pattern": "^[A-Z]{2}[CZ]\\d{3}$",
                      "type": "string",
                      "description": "UGC identifier for a NWS forecast zone or county.\nThe first two letters will correspond to either a state code or marine area code (see #\/components\/schemas\/StateTerritoryCode and #\/components\/schemas\/MarineAreaCode for lists of valid letter combinations).\nThe third letter will be Z for public\/fire zone or C for county.\n"
                  },
                  "NWSZoneType": {
                      "enum": [
                          "land",
                          "marine",
                          "forecast",
                          "public",
                          "coastal",
                          "offshore",
                          "fire",
                          "county"
                      ],
                      "type": "string"
                  },
                  "Observation": {
                      "type": "object",
                      "properties": {
                          "@context": {
                              "$ref": "#\/components\/schemas\/JsonLdContext"
                          },
                          "geometry": {
                              "$ref": "#\/components\/schemas\/GeometryString"
                          },
                          "@id": {
                              "type": "string",
                              "format": "uri"
                          },
                          "@type": {
                              "enum": [
                                  "wx:ObservationStation"
                              ],
                              "type": "string"
                          },
                          "elevation": {
                              "$ref": "#\/components\/schemas\/QuantitativeValue"
                          },
                          "station": {
                              "type": "string",
                              "format": "uri"
                          },
                          "timestamp": {
                              "type": "string",
                              "format": "date-time"
                          },
                          "rawMessage": {
                              "type": "string"
                          },
                          "textDescription": {
                              "type": "string"
                          },
                          "icon": {
                              "type": "string",
                              "format": "uri",
                              "deprecated": true
                          },
                          "presentWeather": {
                              "type": "array",
                              "items": {
                                  "$ref": "#\/components\/schemas\/MetarPhenomenon"
                              }
                          },
                          "temperature": {
                              "$ref": "#\/components\/schemas\/QuantitativeValue"
                          },
                          "dewpoint": {
                              "$ref": "#\/components\/schemas\/QuantitativeValue"
                          },
                          "windDirection": {
                              "$ref": "#\/components\/schemas\/QuantitativeValue"
                          },
                          "windSpeed": {
                              "$ref": "#\/components\/schemas\/QuantitativeValue"
                          },
                          "windGust": {
                              "$ref": "#\/components\/schemas\/QuantitativeValue"
                          },
                          "barometricPressure": {
                              "$ref": "#\/components\/schemas\/QuantitativeValue"
                          },
                          "seaLevelPressure": {
                              "$ref": "#\/components\/schemas\/QuantitativeValue"
                          },
                          "visibility": {
                              "$ref": "#\/components\/schemas\/QuantitativeValue"
                          },
                          "maxTemperatureLast24Hours": {
                              "$ref": "#\/components\/schemas\/QuantitativeValue"
                          },
                          "minTemperatureLast24Hours": {
                              "$ref": "#\/components\/schemas\/QuantitativeValue"
                          },
                          "precipitationLastHour": {
                              "$ref": "#\/components\/schemas\/QuantitativeValue"
                          },
                          "precipitationLast3Hours": {
                              "$ref": "#\/components\/schemas\/QuantitativeValue"
                          },
                          "precipitationLast6Hours": {
                              "$ref": "#\/components\/schemas\/QuantitativeValue"
                          },
                          "relativeHumidity": {
                              "$ref": "#\/components\/schemas\/QuantitativeValue"
                          },
                          "windChill": {
                              "$ref": "#\/components\/schemas\/QuantitativeValue"
                          },
                          "heatIndex": {
                              "$ref": "#\/components\/schemas\/QuantitativeValue"
                          },
                          "cloudLayers": {
                              "type": "array",
                              "items": {
                                  "required": [
                                      "base",
                                      "amount"
                                  ],
                                  "type": "object",
                                  "properties": {
                                      "base": {
                                          "$ref": "#\/components\/schemas\/QuantitativeValue"
                                      },
                                      "amount": {
                                          "$ref": "#\/components\/schemas\/MetarSkyCoverage"
                                      }
                                  },
                                  "additionalProperties": false
                              }
                          }
                      },
                      "additionalProperties": false
                  },
                  "ObservationGeoJson": {
                      "allOf": [
                          {
                              "$ref": "#\/components\/schemas\/GeoJsonFeature"
                          },
                          {
                              "type": "object",
                              "properties": {
                                  "properties": {
                                      "$ref": "#\/components\/schemas\/Observation"
                                  }
                              }
                          }
                      ]
                  },
                  "ObservationJsonLd": {
                      "$ref": "#\/components\/schemas\/Observation"
                  },
                  "ObservationCollectionGeoJson": {
                      "allOf": [
                          {
                              "$ref": "#\/components\/schemas\/GeoJsonFeatureCollection"
                          },
                          {
                              "type": "object",
                              "properties": {
                                  "features": {
                                      "type": "array",
                                      "items": {
                                          "type": "object",
                                          "properties": {
                                              "properties": {
                                                  "$ref": "#\/components\/schemas\/Observation"
                                              }
                                          }
                                      }
                                  }
                              }
                          }
                      ]
                  },
                  "ObservationCollectionJsonLd": {
                      "type": "object",
                      "properties": {
                          "@context": {
                              "$ref": "#\/components\/schemas\/JsonLdContext"
                          },
                          "@graph": {
                              "type": "array",
                              "items": {
                                  "$ref": "#\/components\/schemas\/Observation"
                              }
                          }
                      },
                      "additionalProperties": false
                  },
                  "ObservationStation": {
                      "type": "object",
                      "properties": {
                          "@context": {
                              "$ref": "#\/components\/schemas\/JsonLdContext"
                          },
                          "geometry": {
                              "$ref": "#\/components\/schemas\/GeometryString"
                          },
                          "@id": {
                              "type": "string",
                              "format": "uri"
                          },
                          "@type": {
                              "enum": [
                                  "wx:ObservationStation"
                              ],
                              "type": "string"
                          },
                          "elevation": {
                              "$ref": "#\/components\/schemas\/QuantitativeValue"
                          },
                          "stationIdentifier": {
                              "type": "string"
                          },
                          "name": {
                              "type": "string"
                          },
                          "timeZone": {
                              "type": "string",
                              "format": "iana-time-zone-identifier"
                          },
                          "forecast": {
                              "type": "string",
                              "description": "A link to the NWS public forecast zone containing this station.",
                              "format": "uri"
                          },
                          "county": {
                              "type": "string",
                              "description": "A link to the NWS county zone containing this station.",
                              "format": "uri"
                          },
                          "fireWeatherZone": {
                              "type": "string",
                              "description": "A link to the NWS fire weather forecast zone containing this station.",
                              "format": "uri"
                          }
                      },
                      "additionalProperties": false
                  },
                  "ObservationStationGeoJson": {
                      "allOf": [
                          {
                              "$ref": "#\/components\/schemas\/GeoJsonFeature"
                          },
                          {
                              "type": "object",
                              "properties": {
                                  "properties": {
                                      "$ref": "#\/components\/schemas\/ObservationStation"
                                  }
                              }
                          }
                      ]
                  },
                  "ObservationStationJsonLd": {
                      "allOf": [
                          {
                              "$ref": "#\/components\/schemas\/ObservationStation"
                          },
                          {
                              "required": [
                                  "@context",
                                  "geometry"
                              ],
                              "type": "object",
                              "properties": {
                                  "@context": {
                                      "$ref": "#\/components\/schemas\/JsonLdContext"
                                  },
                                  "geometry": {
                                      "$ref": "#\/components\/schemas\/GeometryString"
                                  }
                              }
                          }
                      ]
                  },
                  "ObservationStationCollectionGeoJson": {
                      "allOf": [
                          {
                              "$ref": "#\/components\/schemas\/GeoJsonFeatureCollection"
                          },
                          {
                              "type": "object",
                              "properties": {
                                  "features": {
                                      "type": "array",
                                      "items": {
                                          "type": "object",
                                          "properties": {
                                              "properties": {
                                                  "$ref": "#\/components\/schemas\/ObservationStation"
                                              }
                                          }
                                      }
                                  },
                                  "observationStations": {
                                      "type": "array",
                                      "items": {
                                          "type": "string",
                                          "format": "uri"
                                      }
                                  }
                              }
                          }
                      ]
                  },
                  "ObservationStationCollectionJsonLd": {
                      "type": "object",
                      "properties": {
                          "@context": {
                              "$ref": "#\/components\/schemas\/JsonLdContext"
                          },
                          "@graph": {
                              "type": "array",
                              "items": {
                                  "$ref": "#\/components\/schemas\/ObservationStation"
                              }
                          },
                          "observationStations": {
                              "type": "array",
                              "items": {
                                  "type": "string",
                                  "format": "uri"
                              }
                          }
                      },
                      "additionalProperties": false
                  },
                  "Office": {
                      "type": "object",
                      "properties": {
                          "@context": {
                              "$ref": "#\/components\/schemas\/JsonLdContext"
                          },
                          "@type": {
                              "enum": [
                                  "GovernmentOrganization"
                              ],
                              "type": "string"
                          },
                          "@id": {
                              "type": "string",
                              "format": "uri"
                          },
                          "id": {
                              "type": "string"
                          },
                          "name": {
                              "type": "string"
                          },
                          "address": {
                              "type": "object",
                              "properties": {
                                  "@type": {
                                      "enum": [
                                          "PostalAddress"
                                      ],
                                      "type": "string"
                                  },
                                  "streetAddress": {
                                      "type": "string"
                                  },
                                  "addressLocality": {
                                      "type": "string"
                                  },
                                  "addressRegion": {
                                      "type": "string"
                                  },
                                  "postalCode": {
                                      "type": "string"
                                  }
                              },
                              "additionalProperties": false
                          },
                          "telephone": {
                              "type": "string"
                          },
                          "faxNumber": {
                              "type": "string"
                          },
                          "email": {
                              "type": "string"
                          },
                          "sameAs": {
                              "type": "string",
                              "format": "uri"
                          },
                          "nwsRegion": {
                              "type": "string"
                          },
                          "parentOrganization": {
                              "type": "string",
                              "format": "uri"
                          },
                          "responsibleCounties": {
                              "type": "array",
                              "items": {
                                  "type": "string",
                                  "format": "uri"
                              }
                          },
                          "responsibleForecastZones": {
                              "type": "array",
                              "items": {
                                  "type": "string",
                                  "format": "uri"
                              }
                          },
                          "responsibleFireZones": {
                              "type": "array",
                              "items": {
                                  "type": "string",
                                  "format": "uri"
                              }
                          },
                          "approvedObservationStations": {
                              "type": "array",
                              "items": {
                                  "type": "string",
                                  "format": "uri"
                              }
                          }
                      },
                      "additionalProperties": false
                  },
                  "OfficeHeadline": {
                      "type": "object",
                      "properties": {
                          "@context": {
                              "$ref": "#\/components\/schemas\/JsonLdContext"
                          },
                          "@id": {
                              "type": "string",
                              "format": "uri"
                          },
                          "id": {
                              "type": "string"
                          },
                          "office": {
                              "type": "string",
                              "format": "uri"
                          },
                          "important": {
                              "type": "boolean"
                          },
                          "issuanceTime": {
                              "type": "string",
                              "format": "date-time"
                          },
                          "link": {
                              "type": "string",
                              "format": "uri"
                          },
                          "name": {
                              "type": "string"
                          },
                          "title": {
                              "type": "string"
                          },
                          "summary": {
                              "type": "string",
                              "nullable": true
                          },
                          "content": {
                              "type": "string"
                          }
                      }
                  },
                  "OfficeHeadlineCollection": {
                      "required": [
                          "@context",
                          "@graph"
                      ],
                      "type": "object",
                      "properties": {
                          "@context": {
                              "$ref": "#\/components\/schemas\/JsonLdContext"
                          },
                          "@graph": {
                              "type": "array",
                              "items": {
                                  "$ref": "#\/components\/schemas\/OfficeHeadline"
                              }
                          }
                      },
                      "additionalProperties": false
                  },
                  "Point": {
                      "type": "object",
                      "properties": {
                          "@context": {
                              "$ref": "#\/components\/schemas\/JsonLdContext"
                          },
                          "geometry": {
                              "$ref": "#\/components\/schemas\/GeometryString"
                          },
                          "@id": {
                              "type": "string",
                              "format": "uri"
                          },
                          "@type": {
                              "enum": [
                                  "wx:Point"
                              ],
                              "type": "string"
                          },
                          "cwa": {
                              "$ref": "#\/components\/schemas\/NWSForecastOfficeId"
                          },
                          "forecastOffice": {
                              "type": "string",
                              "format": "uri"
                          },
                          "gridId": {
                              "$ref": "#\/components\/schemas\/NWSForecastOfficeId"
                          },
                          "gridX": {
                              "minimum": 0,
                              "type": "integer"
                          },
                          "gridY": {
                              "minimum": 0,
                              "type": "integer"
                          },
                          "forecast": {
                              "type": "string",
                              "format": "uri"
                          },
                          "forecastHourly": {
                              "type": "string",
                              "format": "uri"
                          },
                          "forecastGridData": {
                              "type": "string",
                              "format": "uri"
                          },
                          "observationStations": {
                              "type": "string",
                              "format": "uri"
                          },
                          "relativeLocation": {
                              "oneOf": [
                                  {
                                      "$ref": "#\/components\/schemas\/RelativeLocationGeoJson"
                                  },
                                  {
                                      "$ref": "#\/components\/schemas\/RelativeLocationJsonLd"
                                  }
                              ]
                          },
                          "forecastZone": {
                              "type": "string",
                              "format": "uri"
                          },
                          "county": {
                              "type": "string",
                              "format": "uri"
                          },
                          "fireWeatherZone": {
                              "type": "string",
                              "format": "uri"
                          },
                          "timeZone": {
                              "type": "string"
                          },
                          "radarStation": {
                              "type": "string"
                          }
                      }
                  },
                  "PointGeoJson": {
                      "allOf": [
                          {
                              "$ref": "#\/components\/schemas\/GeoJsonFeature"
                          },
                          {
                              "type": "object",
                              "properties": {
                                  "properties": {
                                      "$ref": "#\/components\/schemas\/Point"
                                  }
                              }
                          }
                      ]
                  },
                  "PointJsonLd": {
                      "allOf": [
                          {
                              "$ref": "#\/components\/schemas\/Point"
                          },
                          {
                              "required": [
                                  "@context",
                                  "geometry"
                              ],
                              "type": "object",
                              "properties": {
                                  "@context": {
                                      "$ref": "#\/components\/schemas\/JsonLdContext"
                                  },
                                  "geometry": {
                                      "$ref": "#\/components\/schemas\/GeometryString"
                                  }
                              }
                          }
                      ]
                  },
                  "PointString": {
                      "pattern": "^(-?\\d+(?:\\.\\d+)?),(-?\\d+(?:\\.\\d+)?)$",
                      "type": "string"
                  },
                  "ProblemDetail": {
                      "required": [
                          "type",
                          "title",
                          "status",
                          "detail",
                          "instance",
                          "correlationId"
                      ],
                      "type": "object",
                      "properties": {
                          "type": {
                              "type": "string",
                              "description": "A URI reference (RFC 3986) that identifies the problem type. This is only an identifier and is not necessarily a resolvable URL.\n",
                              "format": "uri",
                              "default": "about:blank",
                              "example": "urn:noaa:nws:api:UnexpectedProblem"
                          },
                          "title": {
                              "type": "string",
                              "description": "A short, human-readable summary of the problem type.",
                              "example": "Unexpected Problem"
                          },
                          "status": {
                              "maximum": 999,
                              "minimum": 100,
                              "type": "number",
                              "description": "The HTTP status code (RFC 7231, Section 6) generated by the origin server for this occurrence of the problem.\n",
                              "example": 500
                          },
                          "detail": {
                              "type": "string",
                              "description": "A human-readable explanation specific to this occurrence of the problem.",
                              "example": "An unexpected problem has occurred."
                          },
                          "instance": {
                              "type": "string",
                              "description": "A URI reference (RFC 3986) that identifies the specific occurrence of the problem. This is only an identifier and is not necessarily a resolvable URL.\n",
                              "format": "uri",
                              "example": "urn:noaa:nws:api:request:493c3a1d-f87e-407f-ae2c-24483f5aab63"
                          },
                          "correlationId": {
                              "type": "string",
                              "description": "A unique identifier for the request, used for NWS debugging purposes. Please include this identifier with any correspondence to help us investigate your issue.\n",
                              "example": "493c3a1d-f87e-407f-ae2c-24483f5aab63"
                          }
                      },
                      "description": "Detail about an error. This document conforms to RFC 7807 (Problem Details for HTTP APIs).",
                      "additionalProperties": true
                  },
                  "QuantitativeValue": {
                      "type": "object",
                      "properties": {
                          "value": {
                              "type": "number",
                              "description": "A measured value",
                              "nullable": true
                          },
                          "maxValue": {
                              "type": "number",
                              "description": "The maximum value of a range of measured values"
                          },
                          "minValue": {
                              "type": "number",
                              "description": "The minimum value of a range of measured values"
                          },
                          "unitCode": {
                              "$ref": "#\/components\/schemas\/UnitOfMeasure"
                          },
                          "qualityControl": {
                              "enum": [
                                  "Z",
                                  "C",
                                  "S",
                                  "V",
                                  "X",
                                  "Q",
                                  "G",
                                  "B",
                                  "T"
                              ],
                              "type": "string",
                              "description": "For values in observation records, the quality control flag from the MADIS system. The definitions of these flags can be found at https:\/\/madis.ncep.noaa.gov\/madis_sfc_qc_notes.shtml\n"
                          }
                      },
                      "description": "A structured value representing a measurement and its unit of measure. This object is a slighly modified version of the schema.org definition at https:\/\/schema.org\/QuantitativeValue\n",
                      "additionalProperties": false
                  },
                  "RegionCode": {
                      "oneOf": [
                          {
                              "$ref": "#\/components\/schemas\/LandRegionCode"
                          },
                          {
                              "$ref": "#\/components\/schemas\/MarineRegionCode"
                          }
                      ]
                  },
                  "RelativeLocation": {
                      "type": "object",
                      "properties": {
                          "city": {
                              "type": "string"
                          },
                          "state": {
                              "type": "string"
                          },
                          "distance": {
                              "$ref": "#\/components\/schemas\/QuantitativeValue"
                          },
                          "bearing": {
                              "$ref": "#\/components\/schemas\/QuantitativeValue"
                          }
                      }
                  },
                  "RelativeLocationGeoJson": {
                      "allOf": [
                          {
                              "$ref": "#\/components\/schemas\/GeoJsonFeature"
                          },
                          {
                              "type": "object",
                              "properties": {
                                  "properties": {
                                      "$ref": "#\/components\/schemas\/RelativeLocation"
                                  }
                              }
                          }
                      ]
                  },
                  "RelativeLocationJsonLd": {
                      "allOf": [
                          {
                              "$ref": "#\/components\/schemas\/RelativeLocation"
                          },
                          {
                              "required": [
                                  "geometry"
                              ],
                              "type": "object",
                              "properties": {
                                  "geometry": {
                                      "$ref": "#\/components\/schemas\/GeometryString"
                                  }
                              }
                          }
                      ]
                  },
                  "StateTerritoryCode": {
                      "enum": [
                          "AL",
                          "AK",
                          "AS",
                          "AR",
                          "AZ",
                          "CA",
                          "CO",
                          "CT",
                          "DE",
                          "DC",
                          "FL",
                          "GA",
                          "GU",
                          "HI",
                          "ID",
                          "IL",
                          "IN",
                          "IA",
                          "KS",
                          "KY",
                          "LA",
                          "ME",
                          "MD",
                          "MA",
                          "MI",
                          "MN",
                          "MS",
                          "MO",
                          "MT",
                          "NE",
                          "NV",
                          "NH",
                          "NJ",
                          "NM",
                          "NY",
                          "NC",
                          "ND",
                          "OH",
                          "OK",
                          "OR",
                          "PA",
                          "PR",
                          "RI",
                          "SC",
                          "SD",
                          "TN",
                          "TX",
                          "UT",
                          "VT",
                          "VI",
                          "VA",
                          "WA",
                          "WV",
                          "WI",
                          "WY"
                      ],
                      "type": "string"
                  },
                  "TextProduct": {
                      "type": "object",
                      "properties": {
                          "@context": {
                              "$ref": "#\/components\/schemas\/JsonLdContext"
                          },
                          "@id": {
                              "type": "string",
                              "format": "uri"
                          },
                          "id": {
                              "type": "string"
                          },
                          "wmoCollectiveId": {
                              "type": "string"
                          },
                          "issuingOffice": {
                              "type": "string"
                          },
                          "issuanceTime": {
                              "type": "string",
                              "format": "date-time"
                          },
                          "productCode": {
                              "type": "string"
                          },
                          "productName": {
                              "type": "string"
                          },
                          "productText": {
                              "type": "string"
                          }
                      },
                      "additionalProperties": false
                  },
                  "TextProductCollection": {
                      "type": "object",
                      "properties": {
                          "@context": {
                              "$ref": "#\/components\/schemas\/JsonLdContext"
                          },
                          "@graph": {
                              "type": "array",
                              "items": {
                                  "$ref": "#\/components\/schemas\/TextProduct"
                              }
                          }
                      },
                      "additionalProperties": false
                  },
                  "TextProductTypeCollection": {
                      "type": "object",
                      "properties": {
                          "@context": {
                              "$ref": "#\/components\/schemas\/JsonLdContext"
                          },
                          "@graph": {
                              "type": "array",
                              "items": {
                                  "required": [
                                      "productCode",
                                      "productName"
                                  ],
                                  "type": "object",
                                  "properties": {
                                      "productCode": {
                                          "type": "string"
                                      },
                                      "productName": {
                                          "type": "string"
                                      }
                                  },
                                  "additionalProperties": false
                              }
                          }
                      },
                      "additionalProperties": false
                  },
                  "TextProductLocationCollection": {
                      "type": "object",
                      "properties": {
                          "@context": {
                              "$ref": "#\/components\/schemas\/JsonLdContext"
                          },
                          "locations": {
                              "type": "object",
                              "additionalProperties": {
                                  "type": "string",
                                  "nullable": true
                              }
                          }
                      },
                      "additionalProperties": false
                  },
                  "UnitOfMeasure": {
                      "pattern": "^((wmo|uc|wmoUnit|nwsUnit):)?.*$",
                      "type": "string",
                      "description": "A string denoting a unit of measure, expressed in the format \"{unit}\" or \"{namespace}:{unit}\".\nUnits with the namespace \"wmo\" or \"wmoUnit\" are defined in the World Meteorological Organization Codes Registry at http:\/\/codes.wmo.int\/common\/unit and should be canonically resolvable to http:\/\/codes.wmo.int\/common\/unit\/{unit}.\nUnits with the namespace \"nwsUnit\" are currently custom and do not align to any standard.\nUnits with no namespace or the namespace \"uc\" are compliant with the Unified Code for Units of Measure syntax defined at https:\/\/unitsofmeasure.org\/. This also aligns with recent versions of the Geographic Markup Language (GML) standard, the IWXXM standard, and OGC Observations and Measurements v2.0 (ISO\/DIS 19156).\nNamespaced units are considered deprecated. We will be aligning API to use the same standards as GML\/IWXXM in the future.\n"
                  },
                  "Zone": {
                      "type": "object",
                      "properties": {
                          "@context": {
                              "$ref": "#\/components\/schemas\/JsonLdContext"
                          },
                          "geometry": {
                              "$ref": "#\/components\/schemas\/GeometryString"
                          },
                          "@id": {
                              "type": "string",
                              "format": "uri"
                          },
                          "@type": {
                              "enum": [
                                  "wx:Zone"
                              ],
                              "type": "string"
                          },
                          "id": {
                              "$ref": "#\/components\/schemas\/NWSZoneID"
                          },
                          "type": {
                              "$ref": "#\/components\/schemas\/NWSZoneType"
                          },
                          "name": {
                              "type": "string"
                          },
                          "effectiveDate": {
                              "type": "string",
                              "format": "date-time"
                          },
                          "expirationDate": {
                              "type": "string",
                              "format": "date-time"
                          },
                          "state": {
                              "oneOf": [
                                  {
                                      "$ref": "#\/components\/schemas\/StateTerritoryCode"
                                  },
                                  {
                                      "enum": [
                                          ""
                                      ],
                                      "type": "string",
                                      "nullable": true
                                  }
                              ]
                          },
                          "cwa": {
                              "type": "array",
                              "items": {
                                  "$ref": "#\/components\/schemas\/NWSForecastOfficeId"
                              }
                          },
                          "forecastOffices": {
                              "type": "array",
                              "items": {
                                  "type": "string",
                                  "format": "uri"
                              }
                          },
                          "timeZone": {
                              "type": "array",
                              "items": {
                                  "type": "string",
                                  "format": "iana-time-zone-identifier"
                              }
                          },
                          "observationStations": {
                              "type": "array",
                              "items": {
                                  "type": "string",
                                  "format": "uri"
                              }
                          },
                          "radarStation": {
                              "type": "string",
                              "nullable": true
                          }
                      },
                      "additionalProperties": false
                  },
                  "ZoneGeoJson": {
                      "allOf": [
                          {
                              "$ref": "#\/components\/schemas\/GeoJsonFeature"
                          },
                          {
                              "type": "object",
                              "properties": {
                                  "properties": {
                                      "$ref": "#\/components\/schemas\/Zone"
                                  }
                              }
                          }
                      ]
                  },
                  "ZoneJsonLd": {
                      "$ref": "#\/components\/schemas\/Zone"
                  },
                  "ZoneCollectionGeoJson": {
                      "allOf": [
                          {
                              "$ref": "#\/components\/schemas\/GeoJsonFeatureCollection"
                          },
                          {
                              "type": "object",
                              "properties": {
                                  "features": {
                                      "type": "array",
                                      "items": {
                                          "type": "object",
                                          "properties": {
                                              "properties": {
                                                  "$ref": "#\/components\/schemas\/Zone"
                                              }
                                          }
                                      }
                                  }
                              }
                          }
                      ]
                  },
                  "ZoneCollectionJsonLd": {
                      "type": "object",
                      "properties": {
                          "@context": {
                              "$ref": "#\/components\/schemas\/JsonLdContext"
                          },
                          "@graph": {
                              "type": "array",
                              "items": {
                                  "$ref": "#\/components\/schemas\/Zone"
                              }
                          }
                      },
                      "additionalProperties": false
                  },
                  "ZoneForecast": {
                      "type": "object",
                      "properties": {
                          "@context": {
                              "$ref": "#\/components\/schemas\/JsonLdContext"
                          },
                          "geometry": {
                              "$ref": "#\/components\/schemas\/GeometryString"
                          },
                          "zone": {
                              "type": "string",
                              "description": "An API link to the zone this forecast is for.",
                              "format": "uri"
                          },
                          "updated": {
                              "type": "string",
                              "description": "The time this zone forecast product was published.",
                              "format": "date-time"
                          },
                          "periods": {
                              "type": "array",
                              "items": {
                                  "required": [
                                      "number",
                                      "name",
                                      "detailedForecast"
                                  ],
                                  "type": "object",
                                  "properties": {
                                      "number": {
                                          "type": "integer",
                                          "description": "A sequential identifier number."
                                      },
                                      "name": {
                                          "type": "string",
                                          "description": "A textual description of the period.",
                                          "example": "This Afternoon"
                                      },
                                      "detailedForecast": {
                                          "type": "string",
                                          "description": "A detailed textual forecast for the period."
                                      }
                                  },
                                  "additionalProperties": false
                              },
                              "description": "An array of forecast periods."
                          }
                      },
                      "description": "An object representing a zone area forecast.",
                      "additionalProperties": false
                  },
                  "ZoneForecastGeoJson": {
                      "allOf": [
                          {
                              "$ref": "#\/components\/schemas\/GeoJsonFeature"
                          },
                          {
                              "type": "object",
                              "properties": {
                                  "properties": {
                                      "$ref": "#\/components\/schemas\/ZoneForecast"
                                  }
                              }
                          }
                      ]
                  },
                  "ZoneForecastJsonLd": {
                      "$ref": "#\/components\/schemas\/ZoneForecast"
                  }
              },
              "responses": {
                  "AlertCollection": {
                      "description": "A collection of alerts.",
                      "headers": {
                          "X-Correlation-Id": {
                              "$ref": "#\/components\/headers\/CorrelationId"
                          },
                          "X-Request-Id": {
                              "$ref": "#\/components\/headers\/RequestId"
                          },
                          "X-Server-Id": {
                              "$ref": "#\/components\/headers\/ServerId"
                          }
                      },
                      "content": {
                          "application\/geo+json": {
                              "schema": {
                                  "$ref": "#\/components\/schemas\/AlertCollectionGeoJson"
                              }
                          },
                          "application\/ld+json": {
                              "schema": {
                                  "$ref": "#\/components\/schemas\/AlertCollectionJsonLd"
                              }
                          },
                          "application\/atom+xml": {
                              "schema": {
                                  "$ref": "#\/components\/schemas\/AlertAtomFeed"
                              }
                          }
                      }
                  },
                  "Error": {
                      "description": "An error response.",
                      "headers": {
                          "X-Correlation-Id": {
                              "$ref": "#\/components\/headers\/CorrelationId"
                          },
                          "X-Request-Id": {
                              "$ref": "#\/components\/headers\/RequestId"
                          },
                          "X-Server-Id": {
                              "$ref": "#\/components\/headers\/ServerId"
                          }
                      },
                      "content": {
                          "application\/problem+json": {
                              "schema": {
                                  "$ref": "#\/components\/schemas\/ProblemDetail"
                              }
                          }
                      }
                  },
                  "GridpointForecast": {
                      "description": "A forecast for a gridpoint.",
                      "headers": {
                          "X-Correlation-Id": {
                              "$ref": "#\/components\/headers\/CorrelationId"
                          },
                          "X-Request-Id": {
                              "$ref": "#\/components\/headers\/RequestId"
                          },
                          "X-Server-Id": {
                              "$ref": "#\/components\/headers\/ServerId"
                          }
                      },
                      "content": {
                          "application\/geo+json": {
                              "schema": {
                                  "$ref": "#\/components\/schemas\/GridpointForecastGeoJson"
                              }
                          },
                          "application\/ld+json": {
                              "schema": {
                                  "$ref": "#\/components\/schemas\/GridpointForecastJsonLd"
                              }
                          },
                          "application\/vnd.noaa.dwml+xml": {
                              "schema": []
                          }
                      }
                  },
                  "Observation": {
                      "description": "An observation record.",
                      "headers": {
                          "X-Correlation-Id": {
                              "$ref": "#\/components\/headers\/CorrelationId"
                          },
                          "X-Request-Id": {
                              "$ref": "#\/components\/headers\/RequestId"
                          },
                          "X-Server-Id": {
                              "$ref": "#\/components\/headers\/ServerId"
                          }
                      },
                      "content": {
                          "application\/geo+json": {
                              "schema": {
                                  "$ref": "#\/components\/schemas\/ObservationGeoJson"
                              }
                          },
                          "application\/ld+json": {
                              "schema": {
                                  "$ref": "#\/components\/schemas\/ObservationJsonLd"
                              }
                          },
                          "application\/vnd.noaa.obs+xml": {
                              "schema": []
                          }
                      }
                  },
                  "ObservationCollection": {
                      "description": "A collection of observation records.",
                      "headers": {
                          "X-Correlation-Id": {
                              "$ref": "#\/components\/headers\/CorrelationId"
                          },
                          "X-Request-Id": {
                              "$ref": "#\/components\/headers\/RequestId"
                          },
                          "X-Server-Id": {
                              "$ref": "#\/components\/headers\/ServerId"
                          }
                      },
                      "content": {
                          "application\/geo+json": {
                              "schema": {
                                  "$ref": "#\/components\/schemas\/ObservationCollectionGeoJson"
                              }
                          },
                          "application\/ld+json": {
                              "schema": {
                                  "$ref": "#\/components\/schemas\/ObservationCollectionJsonLd"
                              }
                          }
                      }
                  },
                  "ObservationStationCollection": {
                      "description": "A collection of observation stations.",
                      "headers": {
                          "X-Correlation-Id": {
                              "$ref": "#\/components\/headers\/CorrelationId"
                          },
                          "X-Request-Id": {
                              "$ref": "#\/components\/headers\/RequestId"
                          },
                          "X-Server-Id": {
                              "$ref": "#\/components\/headers\/ServerId"
                          }
                      },
                      "content": {
                          "application\/geo+json": {
                              "schema": {
                                  "$ref": "#\/components\/schemas\/ObservationStationCollectionGeoJson"
                              }
                          },
                          "application\/ld+json": {
                              "schema": {
                                  "$ref": "#\/components\/schemas\/ObservationStationCollectionJsonLd"
                              }
                          }
                      }
                  }
              },
              "parameters": {
                  "AlertArea": {
                      "name": "area",
                      "in": "query",
                      "description": "State\/territory code or marine area code\nThis parameter is incompatible with the following parameters: point, region, region_type, zone\n",
                      "style": "form",
                      "explode": false,
                      "schema": {
                          "type": "array",
                          "items": {
                              "$ref": "#\/components\/schemas\/AreaCode"
                          }
                      }
                  },
                  "AlertCertainty": {
                      "name": "certainty",
                      "in": "query",
                      "description": "Certainty (observed, likely, possible, unlikely, unknown)",
                      "style": "form",
                      "explode": false,
                      "schema": {
                          "type": "array",
                          "items": {
                              "$ref": "#\/components\/schemas\/AlertCertainty"
                          }
                      }
                  },
                  "AlertCode": {
                      "name": "code",
                      "in": "query",
                      "description": "Event code",
                      "style": "form",
                      "explode": false,
                      "schema": {
                          "type": "array",
                          "items": {
                              "pattern": "^\\w{3}$",
                              "type": "string"
                          }
                      }
                  },
                  "AlertEventName": {
                      "name": "event",
                      "in": "query",
                      "description": "Event name",
                      "style": "form",
                      "explode": false,
                      "schema": {
                          "type": "array",
                          "items": {
                              "pattern": "^[A-Za-z0-9 ]+$",
                              "type": "string"
                          }
                      }
                  },
                  "AlertMessageType": {
                      "name": "message_type",
                      "in": "query",
                      "description": "Message type (alert, update, cancel)",
                      "style": "form",
                      "explode": false,
                      "schema": {
                          "type": "array",
                          "items": {
                              "enum": [
                                  "alert",
                                  "update",
                                  "cancel"
                              ],
                              "type": "string"
                          }
                      }
                  },
                  "AlertPoint": {
                      "name": "point",
                      "in": "query",
                      "description": "Point (latitude,longitude)\nThis parameter is incompatible with the following parameters: area, region, region_type, zone\n",
                      "schema": {
                          "$ref": "#\/components\/schemas\/PointString"
                      }
                  },
                  "AlertRegion": {
                      "name": "region",
                      "in": "query",
                      "description": "Marine region code\nThis parameter is incompatible with the following parameters: area, point, region_type, zone\n",
                      "style": "form",
                      "explode": false,
                      "schema": {
                          "type": "array",
                          "items": {
                              "$ref": "#\/components\/schemas\/MarineRegionCode"
                          }
                      }
                  },
                  "AlertRegionType": {
                      "name": "region_type",
                      "in": "query",
                      "description": "Region type (land or marine)\nThis parameter is incompatible with the following parameters: area, point, region, zone\n",
                      "schema": {
                          "enum": [
                              "land",
                              "marine"
                          ],
                          "type": "string"
                      }
                  },
                  "AlertSeverity": {
                      "name": "severity",
                      "in": "query",
                      "description": "Severity (extreme, severe, moderate, minor, unknown)",
                      "style": "form",
                      "explode": false,
                      "schema": {
                          "type": "array",
                          "items": {
                              "$ref": "#\/components\/schemas\/AlertSeverity"
                          }
                      }
                  },
                  "AlertStatus": {
                      "name": "status",
                      "in": "query",
                      "description": "Status (actual, exercise, system, test, draft)",
                      "style": "form",
                      "explode": false,
                      "schema": {
                          "type": "array",
                          "items": {
                              "enum": [
                                  "actual",
                                  "exercise",
                                  "system",
                                  "test",
                                  "draft"
                              ],
                              "type": "string"
                          }
                      }
                  },
                  "AlertUrgency": {
                      "name": "urgency",
                      "in": "query",
                      "description": "Urgency (immediate, expected, future, past, unknown)",
                      "style": "form",
                      "explode": false,
                      "schema": {
                          "type": "array",
                          "items": {
                              "$ref": "#\/components\/schemas\/AlertUrgency"
                          }
                      }
                  },
                  "AlertZone": {
                      "name": "zone",
                      "in": "query",
                      "description": "Zone ID (forecast or county)\nThis parameter is incompatible with the following parameters: area, point, region, region_type\n",
                      "style": "form",
                      "explode": false,
                      "schema": {
                          "type": "array",
                          "items": {
                              "$ref": "#\/components\/schemas\/NWSZoneID"
                          }
                      }
                  },
                  "GridpointForecastFeatureFlags": {
                      "name": "Feature-Flags",
                      "in": "header",
                      "description": "Enable future and experimental features (see documentation for more info):\n* forecast_temperature_qv: Represent temperature as QuantitativeValue\n* forecast_wind_speed_qv: Represent wind speed as QuantitativeValue\n",
                      "required": false,
                      "style": "simple",
                      "explode": false,
                      "schema": {
                          "type": "array",
                          "items": {
                              "enum": [
                                  "forecast_temperature_qv",
                                  "forecast_wind_speed_qv"
                              ],
                              "type": "string"
                          }
                      }
                  },
                  "GridpointForecastUnits": {
                      "name": "units",
                      "in": "query",
                      "description": "Use US customary or SI (metric) units in textual output",
                      "schema": {
                          "$ref": "#\/components\/schemas\/GridpointForecastUnits"
                      }
                  },
                  "GridpointWFO": {
                      "name": "wfo",
                      "in": "path",
                      "description": "Forecast office ID",
                      "required": true,
                      "schema": {
                          "$ref": "#\/components\/schemas\/NWSForecastOfficeId"
                      }
                  },
                  "GridpointX": {
                      "name": "x",
                      "in": "path",
                      "description": "Forecast grid X coordinate",
                      "required": true,
                      "schema": {
                          "minimum": 0,
                          "type": "integer"
                      }
                  },
                  "GridpointY": {
                      "name": "y",
                      "in": "path",
                      "description": "Forecast grid Y coordinate",
                      "required": true,
                      "schema": {
                          "minimum": 0,
                          "type": "integer"
                      }
                  },
                  "Limit": {
                      "name": "limit",
                      "in": "query",
                      "description": "Limit",
                      "schema": {
                          "maximum": 500,
                          "minimum": 1,
                          "type": "integer"
                      }
                  },
                  "NWSForecastOfficeId": {
                      "name": "officeId",
                      "in": "path",
                      "description": "NWS forecast office ID",
                      "required": true,
                      "schema": {
                          "$ref": "#\/components\/schemas\/NWSForecastOfficeId"
                      }
                  },
                  "NWSZoneId": {
                      "name": "zoneId",
                      "in": "path",
                      "description": "NWS public zone\/county identifier",
                      "required": true,
                      "schema": {
                          "$ref": "#\/components\/schemas\/NWSZoneID"
                      }
                  },
                  "ObservationStationId": {
                      "name": "stationId",
                      "in": "path",
                      "description": "Observation station ID",
                      "required": true,
                      "schema": {
                          "type": "string"
                      }
                  },
                  "PaginationCursor": {
                      "name": "cursor",
                      "in": "query",
                      "description": "Pagination cursor",
                      "schema": {
                          "type": "string"
                      }
                  },
                  "PathPoint": {
                      "name": "point",
                      "in": "path",
                      "description": "Point (latitude, longitude)",
                      "required": true,
                      "schema": {
                          "$ref": "#\/components\/schemas\/PointString"
                      }
                  },
                  "QueryStartTime": {
                      "name": "start",
                      "in": "query",
                      "description": "Start time",
                      "schema": {
                          "type": "string",
                          "format": "date-time"
                      }
                  },
                  "QueryEndTime": {
                      "name": "end",
                      "in": "query",
                      "description": "End time",
                      "schema": {
                          "type": "string",
                          "format": "date-time"
                      }
                  }
              },
              "headers": {
                  "CorrelationId": {
                      "description": "A unique identifier for the request, used for NWS debugging purposes. Please include this identifier with any correspondence to help us investigate your issue.\n",
                      "schema": {
                          "type": "string"
                      }
                  },
                  "RequestId": {
                      "description": "A unique identifier for the request, used for NWS debugging purposes. Please include this identifier with any correspondence to help us investigate your issue.\n",
                      "schema": {
                          "type": "string"
                      }
                  },
                  "ServerId": {
                      "description": "The identifier of the server that generated the response, used for NWS debugging purposes. Please include this identifier with any correspondence to help us investigate your issue.\n",
                      "schema": {
                          "type": "string"
                      }
                  }
              },
              "securitySchemes": {
                  "userAgent": {
                      "type": "apiKey",
                      "description": "We require that all consumers of the API include a User-Agent header in requests. This is due to a high number of scripts exhibiting abusive behavior (intentional or unintentional). We recommend setting the value to something that identifies your application and includes a contact email. This will help us contact you if we notice unusual behavior and also aid in troubleshooting issues.\nThe API remains open and free to use and there are no limits imposed based on the User-Agent string.\nThis mechanism will be replaced with a more typical API key system at a later date.\n",
                      "name": "User-Agent",
                      "in": "header"
                  }
              }
          },
          "security": [
              {
                  "userAgent": []
              }
          ],
          "externalDocs": {
              "description": "Full API documentation",
              "url": "https:\/\/www.weather.gov\/documentation\/services-web-api"
          }
      }
    contentType: yaml
    _type: api_spec
  - _id: env_env_5c6987708e46b88180accf01c2dcf65128e4ffed_sub
    parentId: env_5c6987708e46b88180accf01c2dcf65128e4ffed
    modified: 1656169051879
    created: 1655957554332
    name: OpenAPI env
    data:
      scheme: https
      base_path: ""
      host: api.weather.gov
      userAgent: github.com/AustinTSchaffer
      base_url: https://api.weather.gov/
      lat: 38.031052
      lon: -78.474159
      point: "{{ _.lat }},{{ _.lon }}"
      wfo: "{% response 'body', 'req_wrk_13d288ba15ef41e19b1769afb91c42b871a7ca85',
        'b64::JC5wcm9wZXJ0aWVzLmdyaWRJZA==::46b', 'never', 60 %}"
      x: "{% response 'body', 'req_wrk_13d288ba15ef41e19b1769afb91c42b871a7ca85',
        'b64::JC5wcm9wZXJ0aWVzLmdyaWRY::46b', 'never', 60 %}"
      y: "{% response 'body', 'req_wrk_13d288ba15ef41e19b1769afb91c42b871a7ca85',
        'b64::JC5wcm9wZXJ0aWVzLmdyaWRZ::46b', 'never', 60 %}"
      accept:
        GeoJSON: application/geo+json
        JSON-LD: application/ld+json
        DWML: application/vnd.noaa.dwml+xml
        OXML: application/vnd.noaa.obs+xml
        CAP: application/cap+xml
        ATOM: application/atom+xml
    dataPropertyOrder:
      "&":
        - scheme
        - base_path
        - host
        - userAgent
        - base_url
        - lat
        - lon
        - point
        - wfo
        - x
        - y
        - accept
      "&~|accept":
        - GeoJSON
        - JSON-LD
        - DWML
        - OXML
        - CAP
        - ATOM
    color: null
    isPrivate: false
    metaSortKey: 1655957554332
    _type: environment
